diff --git a/ch02/productinfo/doc.go b/ch02/productinfo/doc.go
new file mode 100644
index 0000000..869327b
--- /dev/null
+++ b/ch02/productinfo/doc.go
@@ -0,0 +1,11 @@
+/*
+	Package productinfo for products
+
+*/
+
+package productinfo
+
+//go:generate echo "For Service"
+//go:generate protoc -I proto/ proto/product_info.proto --go_out=plugins=grpc:go/server/ecommerce
+//go:generate echo "For Client"
+//go:generate protoc -I proto/ proto/product_info.proto --go_out=plugins=grpc:go/client/ecommerce
diff --git a/ch02/productinfo/go/client/ecommerce/product_info.pb.go b/ch02/productinfo/go/client/ecommerce/product_info.pb.go
index e134166..6d8ad3d 100644
--- a/ch02/productinfo/go/client/ecommerce/product_info.pb.go
+++ b/ch02/productinfo/go/client/ecommerce/product_info.pb.go
@@ -1,162 +1,263 @@
 // Code generated by protoc-gen-go. DO NOT EDIT.
+// versions:
+// 	protoc-gen-go v1.25.0-devel
+// 	protoc        v3.13.0
 // source: product_info.proto
 
 package ecommerce
 
 import (
 	context "context"
-	fmt "fmt"
 	proto "github.com/golang/protobuf/proto"
 	grpc "google.golang.org/grpc"
 	codes "google.golang.org/grpc/codes"
 	status "google.golang.org/grpc/status"
-	math "math"
+	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
+	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
+	reflect "reflect"
+	sync "sync"
 )
 
-// Reference imports to suppress errors if they are not otherwise used.
-var _ = proto.Marshal
-var _ = fmt.Errorf
-var _ = math.Inf
+const (
+	// Verify that this generated code is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
+	// Verify that runtime/protoimpl is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
+)
 
-// This is a compile-time assertion to ensure that this generated file
-// is compatible with the proto package it is being compiled against.
-// A compilation error at this line likely means your copy of the
-// proto package needs to be updated.
-const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
+// This is a compile-time assertion that a sufficiently up-to-date version
+// of the legacy proto package is being used.
+const _ = proto.ProtoPackageIsVersion4
 
 type Product struct {
-	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
-	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
-	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
-	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
-
-func (m *Product) Reset()         { *m = Product{} }
-func (m *Product) String() string { return proto.CompactTextString(m) }
-func (*Product) ProtoMessage()    {}
-func (*Product) Descriptor() ([]byte, []int) {
-	return fileDescriptor_9a4d768ec9cb4951, []int{0}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
+	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
+	Price       float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
+}
+
+func (x *Product) Reset() {
+	*x = Product{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_product_info_proto_msgTypes[0]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
 
-func (m *Product) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_Product.Unmarshal(m, b)
-}
-func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
-}
-func (m *Product) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Product.Merge(m, src)
-}
-func (m *Product) XXX_Size() int {
-	return xxx_messageInfo_Product.Size(m)
+func (x *Product) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *Product) XXX_DiscardUnknown() {
-	xxx_messageInfo_Product.DiscardUnknown(m)
+
+func (*Product) ProtoMessage() {}
+
+func (x *Product) ProtoReflect() protoreflect.Message {
+	mi := &file_product_info_proto_msgTypes[0]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_Product proto.InternalMessageInfo
+// Deprecated: Use Product.ProtoReflect.Descriptor instead.
+func (*Product) Descriptor() ([]byte, []int) {
+	return file_product_info_proto_rawDescGZIP(), []int{0}
+}
 
-func (m *Product) GetId() string {
-	if m != nil {
-		return m.Id
+func (x *Product) GetId() string {
+	if x != nil {
+		return x.Id
 	}
 	return ""
 }
 
-func (m *Product) GetName() string {
-	if m != nil {
-		return m.Name
+func (x *Product) GetName() string {
+	if x != nil {
+		return x.Name
 	}
 	return ""
 }
 
-func (m *Product) GetDescription() string {
-	if m != nil {
-		return m.Description
+func (x *Product) GetDescription() string {
+	if x != nil {
+		return x.Description
 	}
 	return ""
 }
 
-func (m *Product) GetPrice() float32 {
-	if m != nil {
-		return m.Price
+func (x *Product) GetPrice() float32 {
+	if x != nil {
+		return x.Price
 	}
 	return 0
 }
 
 type ProductID struct {
-	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
 
-func (m *ProductID) Reset()         { *m = ProductID{} }
-func (m *ProductID) String() string { return proto.CompactTextString(m) }
-func (*ProductID) ProtoMessage()    {}
-func (*ProductID) Descriptor() ([]byte, []int) {
-	return fileDescriptor_9a4d768ec9cb4951, []int{1}
+	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
 }
 
-func (m *ProductID) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_ProductID.Unmarshal(m, b)
-}
-func (m *ProductID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_ProductID.Marshal(b, m, deterministic)
-}
-func (m *ProductID) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ProductID.Merge(m, src)
-}
-func (m *ProductID) XXX_Size() int {
-	return xxx_messageInfo_ProductID.Size(m)
+func (x *ProductID) Reset() {
+	*x = ProductID{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_product_info_proto_msgTypes[1]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
-func (m *ProductID) XXX_DiscardUnknown() {
-	xxx_messageInfo_ProductID.DiscardUnknown(m)
+
+func (x *ProductID) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
 
-var xxx_messageInfo_ProductID proto.InternalMessageInfo
+func (*ProductID) ProtoMessage() {}
 
-func (m *ProductID) GetValue() string {
-	if m != nil {
-		return m.Value
+func (x *ProductID) ProtoReflect() protoreflect.Message {
+	mi := &file_product_info_proto_msgTypes[1]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
 	}
-	return ""
+	return mi.MessageOf(x)
 }
 
-func init() {
-	proto.RegisterType((*Product)(nil), "ecommerce.Product")
-	proto.RegisterType((*ProductID)(nil), "ecommerce.ProductID")
+// Deprecated: Use ProductID.ProtoReflect.Descriptor instead.
+func (*ProductID) Descriptor() ([]byte, []int) {
+	return file_product_info_proto_rawDescGZIP(), []int{1}
 }
 
-func init() { proto.RegisterFile("product_info.proto", fileDescriptor_9a4d768ec9cb4951) }
+func (x *ProductID) GetValue() string {
+	if x != nil {
+		return x.Value
+	}
+	return ""
+}
+
+var File_product_info_proto protoreflect.FileDescriptor
+
+var file_product_info_proto_rawDesc = []byte{
+	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x22,
+	0x65, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
+	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
+	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
+	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
+	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
+	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
+	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
+	0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
+	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x7d, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
+	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x50,
+	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72,
+	0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x63, 0x6f,
+	0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
+	0x12, 0x36, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x14,
+	0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
+	0x63, 0x74, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65,
+	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
+}
+
+var (
+	file_product_info_proto_rawDescOnce sync.Once
+	file_product_info_proto_rawDescData = file_product_info_proto_rawDesc
+)
 
-var fileDescriptor_9a4d768ec9cb4951 = []byte{
-	// 199 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x4f,
-	0x29, 0x4d, 0x2e, 0x89, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
-	0x4c, 0x4d, 0xce, 0xcf, 0xcd, 0x4d, 0x2d, 0x4a, 0x4e, 0x55, 0x4a, 0xe5, 0x62, 0x0f, 0x80, 0x28,
-	0x10, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c,
-	0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x02, 0x8b, 0x80, 0xd9, 0x42, 0x0a,
-	0x5c, 0xdc, 0x29, 0xa9, 0xc5, 0xc9, 0x45, 0x99, 0x05, 0x25, 0x99, 0xf9, 0x79, 0x12, 0xcc, 0x60,
-	0x29, 0x64, 0x21, 0x21, 0x11, 0x2e, 0xd6, 0x82, 0xa2, 0xcc, 0xe4, 0x54, 0x09, 0x16, 0x05, 0x46,
-	0x0d, 0xa6, 0x20, 0x08, 0x47, 0x49, 0x91, 0x8b, 0x13, 0x6a, 0x8d, 0xa7, 0x0b, 0x48, 0x49, 0x59,
-	0x62, 0x4e, 0x69, 0x2a, 0xd4, 0x2e, 0x08, 0xc7, 0xa8, 0x96, 0x8b, 0x1b, 0xa6, 0x24, 0x2f, 0x2d,
-	0x5f, 0xc8, 0x8c, 0x8b, 0x2b, 0x31, 0x25, 0x05, 0xe6, 0x36, 0x21, 0x3d, 0xb8, 0x93, 0xf5, 0xa0,
-	0x62, 0x52, 0x22, 0x98, 0x62, 0x9e, 0x2e, 0x20, 0x7d, 0xe9, 0xa9, 0x25, 0x30, 0x7d, 0x58, 0xd5,
-	0x48, 0x61, 0x31, 0x2d, 0x89, 0x0d, 0x1c, 0x34, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b,
-	0x1f, 0xc5, 0x58, 0x30, 0x01, 0x00, 0x00,
+func file_product_info_proto_rawDescGZIP() []byte {
+	file_product_info_proto_rawDescOnce.Do(func() {
+		file_product_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_info_proto_rawDescData)
+	})
+	return file_product_info_proto_rawDescData
+}
+
+var file_product_info_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
+var file_product_info_proto_goTypes = []interface{}{
+	(*Product)(nil),   // 0: ecommerce.Product
+	(*ProductID)(nil), // 1: ecommerce.ProductID
+}
+var file_product_info_proto_depIdxs = []int32{
+	0, // 0: ecommerce.ProductInfo.addProduct:input_type -> ecommerce.Product
+	1, // 1: ecommerce.ProductInfo.getProduct:input_type -> ecommerce.ProductID
+	1, // 2: ecommerce.ProductInfo.addProduct:output_type -> ecommerce.ProductID
+	0, // 3: ecommerce.ProductInfo.getProduct:output_type -> ecommerce.Product
+	2, // [2:4] is the sub-list for method output_type
+	0, // [0:2] is the sub-list for method input_type
+	0, // [0:0] is the sub-list for extension type_name
+	0, // [0:0] is the sub-list for extension extendee
+	0, // [0:0] is the sub-list for field type_name
+}
+
+func init() { file_product_info_proto_init() }
+func file_product_info_proto_init() {
+	if File_product_info_proto != nil {
+		return
+	}
+	if !protoimpl.UnsafeEnabled {
+		file_product_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*Product); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_product_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ProductID); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+	}
+	type x struct{}
+	out := protoimpl.TypeBuilder{
+		File: protoimpl.DescBuilder{
+			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
+			RawDescriptor: file_product_info_proto_rawDesc,
+			NumEnums:      0,
+			NumMessages:   2,
+			NumExtensions: 0,
+			NumServices:   1,
+		},
+		GoTypes:           file_product_info_proto_goTypes,
+		DependencyIndexes: file_product_info_proto_depIdxs,
+		MessageInfos:      file_product_info_proto_msgTypes,
+	}.Build()
+	File_product_info_proto = out.File
+	file_product_info_proto_rawDesc = nil
+	file_product_info_proto_goTypes = nil
+	file_product_info_proto_depIdxs = nil
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
 var _ context.Context
-var _ grpc.ClientConn
+var _ grpc.ClientConnInterface
 
 // This is a compile-time assertion to ensure that this generated file
 // is compatible with the grpc package it is being compiled against.
-const _ = grpc.SupportPackageIsVersion4
+const _ = grpc.SupportPackageIsVersion6
 
 // ProductInfoClient is the client API for ProductInfo service.
 //
@@ -167,10 +268,10 @@ type ProductInfoClient interface {
 }
 
 type productInfoClient struct {
-	cc *grpc.ClientConn
+	cc grpc.ClientConnInterface
 }
 
-func NewProductInfoClient(cc *grpc.ClientConn) ProductInfoClient {
+func NewProductInfoClient(cc grpc.ClientConnInterface) ProductInfoClient {
 	return &productInfoClient{cc}
 }
 
@@ -202,10 +303,10 @@ type ProductInfoServer interface {
 type UnimplementedProductInfoServer struct {
 }
 
-func (*UnimplementedProductInfoServer) AddProduct(ctx context.Context, req *Product) (*ProductID, error) {
+func (*UnimplementedProductInfoServer) AddProduct(context.Context, *Product) (*ProductID, error) {
 	return nil, status.Errorf(codes.Unimplemented, "method AddProduct not implemented")
 }
-func (*UnimplementedProductInfoServer) GetProduct(ctx context.Context, req *ProductID) (*Product, error) {
+func (*UnimplementedProductInfoServer) GetProduct(context.Context, *ProductID) (*Product, error) {
 	return nil, status.Errorf(codes.Unimplemented, "method GetProduct not implemented")
 }
 
diff --git a/ch02/productinfo/go/client/go.mod b/ch02/productinfo/go/client/go.mod
index 9e388df..55e1479 100644
--- a/ch02/productinfo/go/client/go.mod
+++ b/ch02/productinfo/go/client/go.mod
@@ -1,6 +1,9 @@
 module productinfo/client
 
+go 1.15
+
 require (
-	github.com/golang/protobuf v1.3.2
-	google.golang.org/grpc v1.24.0
+	github.com/golang/protobuf v1.4.1
+	google.golang.org/grpc v1.27.0
+	google.golang.org/protobuf v1.25.0
 )
diff --git a/ch02/productinfo/go/server/ecommerce/product_info.pb.go b/ch02/productinfo/go/server/ecommerce/product_info.pb.go
index e134166..6d8ad3d 100644
--- a/ch02/productinfo/go/server/ecommerce/product_info.pb.go
+++ b/ch02/productinfo/go/server/ecommerce/product_info.pb.go
@@ -1,162 +1,263 @@
 // Code generated by protoc-gen-go. DO NOT EDIT.
+// versions:
+// 	protoc-gen-go v1.25.0-devel
+// 	protoc        v3.13.0
 // source: product_info.proto
 
 package ecommerce
 
 import (
 	context "context"
-	fmt "fmt"
 	proto "github.com/golang/protobuf/proto"
 	grpc "google.golang.org/grpc"
 	codes "google.golang.org/grpc/codes"
 	status "google.golang.org/grpc/status"
-	math "math"
+	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
+	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
+	reflect "reflect"
+	sync "sync"
 )
 
-// Reference imports to suppress errors if they are not otherwise used.
-var _ = proto.Marshal
-var _ = fmt.Errorf
-var _ = math.Inf
+const (
+	// Verify that this generated code is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
+	// Verify that runtime/protoimpl is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
+)
 
-// This is a compile-time assertion to ensure that this generated file
-// is compatible with the proto package it is being compiled against.
-// A compilation error at this line likely means your copy of the
-// proto package needs to be updated.
-const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
+// This is a compile-time assertion that a sufficiently up-to-date version
+// of the legacy proto package is being used.
+const _ = proto.ProtoPackageIsVersion4
 
 type Product struct {
-	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
-	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
-	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
-	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
-
-func (m *Product) Reset()         { *m = Product{} }
-func (m *Product) String() string { return proto.CompactTextString(m) }
-func (*Product) ProtoMessage()    {}
-func (*Product) Descriptor() ([]byte, []int) {
-	return fileDescriptor_9a4d768ec9cb4951, []int{0}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
+	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
+	Price       float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
+}
+
+func (x *Product) Reset() {
+	*x = Product{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_product_info_proto_msgTypes[0]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
 
-func (m *Product) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_Product.Unmarshal(m, b)
-}
-func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
-}
-func (m *Product) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Product.Merge(m, src)
-}
-func (m *Product) XXX_Size() int {
-	return xxx_messageInfo_Product.Size(m)
+func (x *Product) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *Product) XXX_DiscardUnknown() {
-	xxx_messageInfo_Product.DiscardUnknown(m)
+
+func (*Product) ProtoMessage() {}
+
+func (x *Product) ProtoReflect() protoreflect.Message {
+	mi := &file_product_info_proto_msgTypes[0]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_Product proto.InternalMessageInfo
+// Deprecated: Use Product.ProtoReflect.Descriptor instead.
+func (*Product) Descriptor() ([]byte, []int) {
+	return file_product_info_proto_rawDescGZIP(), []int{0}
+}
 
-func (m *Product) GetId() string {
-	if m != nil {
-		return m.Id
+func (x *Product) GetId() string {
+	if x != nil {
+		return x.Id
 	}
 	return ""
 }
 
-func (m *Product) GetName() string {
-	if m != nil {
-		return m.Name
+func (x *Product) GetName() string {
+	if x != nil {
+		return x.Name
 	}
 	return ""
 }
 
-func (m *Product) GetDescription() string {
-	if m != nil {
-		return m.Description
+func (x *Product) GetDescription() string {
+	if x != nil {
+		return x.Description
 	}
 	return ""
 }
 
-func (m *Product) GetPrice() float32 {
-	if m != nil {
-		return m.Price
+func (x *Product) GetPrice() float32 {
+	if x != nil {
+		return x.Price
 	}
 	return 0
 }
 
 type ProductID struct {
-	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
 
-func (m *ProductID) Reset()         { *m = ProductID{} }
-func (m *ProductID) String() string { return proto.CompactTextString(m) }
-func (*ProductID) ProtoMessage()    {}
-func (*ProductID) Descriptor() ([]byte, []int) {
-	return fileDescriptor_9a4d768ec9cb4951, []int{1}
+	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
 }
 
-func (m *ProductID) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_ProductID.Unmarshal(m, b)
-}
-func (m *ProductID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_ProductID.Marshal(b, m, deterministic)
-}
-func (m *ProductID) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ProductID.Merge(m, src)
-}
-func (m *ProductID) XXX_Size() int {
-	return xxx_messageInfo_ProductID.Size(m)
+func (x *ProductID) Reset() {
+	*x = ProductID{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_product_info_proto_msgTypes[1]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
-func (m *ProductID) XXX_DiscardUnknown() {
-	xxx_messageInfo_ProductID.DiscardUnknown(m)
+
+func (x *ProductID) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
 
-var xxx_messageInfo_ProductID proto.InternalMessageInfo
+func (*ProductID) ProtoMessage() {}
 
-func (m *ProductID) GetValue() string {
-	if m != nil {
-		return m.Value
+func (x *ProductID) ProtoReflect() protoreflect.Message {
+	mi := &file_product_info_proto_msgTypes[1]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
 	}
-	return ""
+	return mi.MessageOf(x)
 }
 
-func init() {
-	proto.RegisterType((*Product)(nil), "ecommerce.Product")
-	proto.RegisterType((*ProductID)(nil), "ecommerce.ProductID")
+// Deprecated: Use ProductID.ProtoReflect.Descriptor instead.
+func (*ProductID) Descriptor() ([]byte, []int) {
+	return file_product_info_proto_rawDescGZIP(), []int{1}
 }
 
-func init() { proto.RegisterFile("product_info.proto", fileDescriptor_9a4d768ec9cb4951) }
+func (x *ProductID) GetValue() string {
+	if x != nil {
+		return x.Value
+	}
+	return ""
+}
+
+var File_product_info_proto protoreflect.FileDescriptor
+
+var file_product_info_proto_rawDesc = []byte{
+	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
+	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x22,
+	0x65, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
+	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
+	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
+	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
+	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
+	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
+	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
+	0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
+	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x7d, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
+	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x50,
+	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72,
+	0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x63, 0x6f,
+	0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
+	0x12, 0x36, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x14,
+	0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
+	0x63, 0x74, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65,
+	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
+}
+
+var (
+	file_product_info_proto_rawDescOnce sync.Once
+	file_product_info_proto_rawDescData = file_product_info_proto_rawDesc
+)
 
-var fileDescriptor_9a4d768ec9cb4951 = []byte{
-	// 199 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x4f,
-	0x29, 0x4d, 0x2e, 0x89, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
-	0x4c, 0x4d, 0xce, 0xcf, 0xcd, 0x4d, 0x2d, 0x4a, 0x4e, 0x55, 0x4a, 0xe5, 0x62, 0x0f, 0x80, 0x28,
-	0x10, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c,
-	0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x02, 0x8b, 0x80, 0xd9, 0x42, 0x0a,
-	0x5c, 0xdc, 0x29, 0xa9, 0xc5, 0xc9, 0x45, 0x99, 0x05, 0x25, 0x99, 0xf9, 0x79, 0x12, 0xcc, 0x60,
-	0x29, 0x64, 0x21, 0x21, 0x11, 0x2e, 0xd6, 0x82, 0xa2, 0xcc, 0xe4, 0x54, 0x09, 0x16, 0x05, 0x46,
-	0x0d, 0xa6, 0x20, 0x08, 0x47, 0x49, 0x91, 0x8b, 0x13, 0x6a, 0x8d, 0xa7, 0x0b, 0x48, 0x49, 0x59,
-	0x62, 0x4e, 0x69, 0x2a, 0xd4, 0x2e, 0x08, 0xc7, 0xa8, 0x96, 0x8b, 0x1b, 0xa6, 0x24, 0x2f, 0x2d,
-	0x5f, 0xc8, 0x8c, 0x8b, 0x2b, 0x31, 0x25, 0x05, 0xe6, 0x36, 0x21, 0x3d, 0xb8, 0x93, 0xf5, 0xa0,
-	0x62, 0x52, 0x22, 0x98, 0x62, 0x9e, 0x2e, 0x20, 0x7d, 0xe9, 0xa9, 0x25, 0x30, 0x7d, 0x58, 0xd5,
-	0x48, 0x61, 0x31, 0x2d, 0x89, 0x0d, 0x1c, 0x34, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b,
-	0x1f, 0xc5, 0x58, 0x30, 0x01, 0x00, 0x00,
+func file_product_info_proto_rawDescGZIP() []byte {
+	file_product_info_proto_rawDescOnce.Do(func() {
+		file_product_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_info_proto_rawDescData)
+	})
+	return file_product_info_proto_rawDescData
+}
+
+var file_product_info_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
+var file_product_info_proto_goTypes = []interface{}{
+	(*Product)(nil),   // 0: ecommerce.Product
+	(*ProductID)(nil), // 1: ecommerce.ProductID
+}
+var file_product_info_proto_depIdxs = []int32{
+	0, // 0: ecommerce.ProductInfo.addProduct:input_type -> ecommerce.Product
+	1, // 1: ecommerce.ProductInfo.getProduct:input_type -> ecommerce.ProductID
+	1, // 2: ecommerce.ProductInfo.addProduct:output_type -> ecommerce.ProductID
+	0, // 3: ecommerce.ProductInfo.getProduct:output_type -> ecommerce.Product
+	2, // [2:4] is the sub-list for method output_type
+	0, // [0:2] is the sub-list for method input_type
+	0, // [0:0] is the sub-list for extension type_name
+	0, // [0:0] is the sub-list for extension extendee
+	0, // [0:0] is the sub-list for field type_name
+}
+
+func init() { file_product_info_proto_init() }
+func file_product_info_proto_init() {
+	if File_product_info_proto != nil {
+		return
+	}
+	if !protoimpl.UnsafeEnabled {
+		file_product_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*Product); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_product_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*ProductID); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+	}
+	type x struct{}
+	out := protoimpl.TypeBuilder{
+		File: protoimpl.DescBuilder{
+			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
+			RawDescriptor: file_product_info_proto_rawDesc,
+			NumEnums:      0,
+			NumMessages:   2,
+			NumExtensions: 0,
+			NumServices:   1,
+		},
+		GoTypes:           file_product_info_proto_goTypes,
+		DependencyIndexes: file_product_info_proto_depIdxs,
+		MessageInfos:      file_product_info_proto_msgTypes,
+	}.Build()
+	File_product_info_proto = out.File
+	file_product_info_proto_rawDesc = nil
+	file_product_info_proto_goTypes = nil
+	file_product_info_proto_depIdxs = nil
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
 var _ context.Context
-var _ grpc.ClientConn
+var _ grpc.ClientConnInterface
 
 // This is a compile-time assertion to ensure that this generated file
 // is compatible with the grpc package it is being compiled against.
-const _ = grpc.SupportPackageIsVersion4
+const _ = grpc.SupportPackageIsVersion6
 
 // ProductInfoClient is the client API for ProductInfo service.
 //
@@ -167,10 +268,10 @@ type ProductInfoClient interface {
 }
 
 type productInfoClient struct {
-	cc *grpc.ClientConn
+	cc grpc.ClientConnInterface
 }
 
-func NewProductInfoClient(cc *grpc.ClientConn) ProductInfoClient {
+func NewProductInfoClient(cc grpc.ClientConnInterface) ProductInfoClient {
 	return &productInfoClient{cc}
 }
 
@@ -202,10 +303,10 @@ type ProductInfoServer interface {
 type UnimplementedProductInfoServer struct {
 }
 
-func (*UnimplementedProductInfoServer) AddProduct(ctx context.Context, req *Product) (*ProductID, error) {
+func (*UnimplementedProductInfoServer) AddProduct(context.Context, *Product) (*ProductID, error) {
 	return nil, status.Errorf(codes.Unimplemented, "method AddProduct not implemented")
 }
-func (*UnimplementedProductInfoServer) GetProduct(ctx context.Context, req *ProductID) (*Product, error) {
+func (*UnimplementedProductInfoServer) GetProduct(context.Context, *ProductID) (*Product, error) {
 	return nil, status.Errorf(codes.Unimplemented, "method GetProduct not implemented")
 }
 
diff --git a/ch02/productinfo/go/server/go.mod b/ch02/productinfo/go/server/go.mod
index 76ffdad..4b3a17b 100644
--- a/ch02/productinfo/go/server/go.mod
+++ b/ch02/productinfo/go/server/go.mod
@@ -1,7 +1,10 @@
 module productinfo/server
 
+go 1.15
+
 require (
 	github.com/gofrs/uuid v3.2.0+incompatible
-	github.com/golang/protobuf v1.3.2
-	google.golang.org/grpc v1.24.0
+	github.com/golang/protobuf v1.4.1
+	google.golang.org/grpc v1.27.0
+	google.golang.org/protobuf v1.25.0
 )
diff --git a/ch03/order-service/doc.go b/ch03/order-service/doc.go
new file mode 100644
index 0000000..87f03f3
--- /dev/null
+++ b/ch03/order-service/doc.go
@@ -0,0 +1,11 @@
+/*
+	Package order-service for order
+
+*/
+
+package order_service
+
+//go:generate echo "For Service"
+//go:generate protoc -I proto/ proto/order_management.proto --go_out=plugins=grpc:go/service/ecommerce
+//go:generate echo "For Client"
+//go:generate protoc -I proto/ proto/order_management.proto --go_out=plugins=grpc:go/client/ecommerce
diff --git a/ch03/order-service/go/client/ecommerce/order_management.pb.go b/ch03/order-service/go/client/ecommerce/order_management.pb.go
index e2434d1..6e97d82 100644
--- a/ch03/order-service/go/client/ecommerce/order_management.pb.go
+++ b/ch03/order-service/go/client/ecommerce/order_management.pb.go
@@ -1,195 +1,322 @@
+// Deprecated !!!!
+
 // Code generated by protoc-gen-go. DO NOT EDIT.
+// versions:
+// 	protoc-gen-go v1.25.0-devel
+// 	protoc        v3.13.0
 // source: order_management.proto
 
 package ecommerce
 
 import (
 	context "context"
-	fmt "fmt"
 	proto "github.com/golang/protobuf/proto"
 	wrappers "github.com/golang/protobuf/ptypes/wrappers"
 	grpc "google.golang.org/grpc"
 	codes "google.golang.org/grpc/codes"
 	status "google.golang.org/grpc/status"
-	math "math"
+	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
+	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
+	reflect "reflect"
+	sync "sync"
 )
 
-// Reference imports to suppress errors if they are not otherwise used.
-var _ = proto.Marshal
-var _ = fmt.Errorf
-var _ = math.Inf
+const (
+	// Verify that this generated code is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
+	// Verify that runtime/protoimpl is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
+)
 
-// This is a compile-time assertion to ensure that this generated file
-// is compatible with the proto package it is being compiled against.
-// A compilation error at this line likely means your copy of the
-// proto package needs to be updated.
-const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
+// This is a compile-time assertion that a sufficiently up-to-date version
+// of the legacy proto package is being used.
+const _ = proto.ProtoPackageIsVersion4
 
 type Order struct {
-	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
-	Items                []string `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
-	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
-	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
-	Destination          string   `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
-
-func (m *Order) Reset()         { *m = Order{} }
-func (m *Order) String() string { return proto.CompactTextString(m) }
-func (*Order) ProtoMessage()    {}
-func (*Order) Descriptor() ([]byte, []int) {
-	return fileDescriptor_6653354279552460, []int{0}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Items       []string `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
+	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
+	Price       float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
+	Destination string   `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
+}
+
+func (x *Order) Reset() {
+	*x = Order{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_order_management_proto_msgTypes[0]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
 
-func (m *Order) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_Order.Unmarshal(m, b)
-}
-func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
-}
-func (m *Order) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Order.Merge(m, src)
+func (x *Order) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *Order) XXX_Size() int {
-	return xxx_messageInfo_Order.Size(m)
-}
-func (m *Order) XXX_DiscardUnknown() {
-	xxx_messageInfo_Order.DiscardUnknown(m)
+
+func (*Order) ProtoMessage() {}
+
+func (x *Order) ProtoReflect() protoreflect.Message {
+	mi := &file_order_management_proto_msgTypes[0]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_Order proto.InternalMessageInfo
+// Deprecated: Use Order.ProtoReflect.Descriptor instead.
+func (*Order) Descriptor() ([]byte, []int) {
+	return file_order_management_proto_rawDescGZIP(), []int{0}
+}
 
-func (m *Order) GetId() string {
-	if m != nil {
-		return m.Id
+func (x *Order) GetId() string {
+	if x != nil {
+		return x.Id
 	}
 	return ""
 }
 
-func (m *Order) GetItems() []string {
-	if m != nil {
-		return m.Items
+func (x *Order) GetItems() []string {
+	if x != nil {
+		return x.Items
 	}
 	return nil
 }
 
-func (m *Order) GetDescription() string {
-	if m != nil {
-		return m.Description
+func (x *Order) GetDescription() string {
+	if x != nil {
+		return x.Description
 	}
 	return ""
 }
 
-func (m *Order) GetPrice() float32 {
-	if m != nil {
-		return m.Price
+func (x *Order) GetPrice() float32 {
+	if x != nil {
+		return x.Price
 	}
 	return 0
 }
 
-func (m *Order) GetDestination() string {
-	if m != nil {
-		return m.Destination
+func (x *Order) GetDestination() string {
+	if x != nil {
+		return x.Destination
 	}
 	return ""
 }
 
 type CombinedShipment struct {
-	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
-	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
-	OrdersList           []*Order `protobuf:"bytes,3,rep,name=ordersList,proto3" json:"ordersList,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
 
-func (m *CombinedShipment) Reset()         { *m = CombinedShipment{} }
-func (m *CombinedShipment) String() string { return proto.CompactTextString(m) }
-func (*CombinedShipment) ProtoMessage()    {}
-func (*CombinedShipment) Descriptor() ([]byte, []int) {
-	return fileDescriptor_6653354279552460, []int{1}
+	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Status     string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
+	OrdersList []*Order `protobuf:"bytes,3,rep,name=ordersList,proto3" json:"ordersList,omitempty"`
 }
 
-func (m *CombinedShipment) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_CombinedShipment.Unmarshal(m, b)
-}
-func (m *CombinedShipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_CombinedShipment.Marshal(b, m, deterministic)
-}
-func (m *CombinedShipment) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_CombinedShipment.Merge(m, src)
+func (x *CombinedShipment) Reset() {
+	*x = CombinedShipment{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_order_management_proto_msgTypes[1]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
-func (m *CombinedShipment) XXX_Size() int {
-	return xxx_messageInfo_CombinedShipment.Size(m)
+
+func (x *CombinedShipment) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *CombinedShipment) XXX_DiscardUnknown() {
-	xxx_messageInfo_CombinedShipment.DiscardUnknown(m)
+
+func (*CombinedShipment) ProtoMessage() {}
+
+func (x *CombinedShipment) ProtoReflect() protoreflect.Message {
+	mi := &file_order_management_proto_msgTypes[1]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_CombinedShipment proto.InternalMessageInfo
+// Deprecated: Use CombinedShipment.ProtoReflect.Descriptor instead.
+func (*CombinedShipment) Descriptor() ([]byte, []int) {
+	return file_order_management_proto_rawDescGZIP(), []int{1}
+}
 
-func (m *CombinedShipment) GetId() string {
-	if m != nil {
-		return m.Id
+func (x *CombinedShipment) GetId() string {
+	if x != nil {
+		return x.Id
 	}
 	return ""
 }
 
-func (m *CombinedShipment) GetStatus() string {
-	if m != nil {
-		return m.Status
+func (x *CombinedShipment) GetStatus() string {
+	if x != nil {
+		return x.Status
 	}
 	return ""
 }
 
-func (m *CombinedShipment) GetOrdersList() []*Order {
-	if m != nil {
-		return m.OrdersList
+func (x *CombinedShipment) GetOrdersList() []*Order {
+	if x != nil {
+		return x.OrdersList
 	}
 	return nil
 }
 
-func init() {
-	proto.RegisterType((*Order)(nil), "ecommerce.Order")
-	proto.RegisterType((*CombinedShipment)(nil), "ecommerce.CombinedShipment")
-}
-
-func init() { proto.RegisterFile("order_management.proto", fileDescriptor_6653354279552460) }
-
-var fileDescriptor_6653354279552460 = []byte{
-	// 330 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x5f, 0x4b, 0xc3, 0x30,
-	0x14, 0xc5, 0x49, 0xeb, 0x86, 0xbb, 0xf3, 0xcf, 0x08, 0x32, 0xca, 0x14, 0x29, 0x7b, 0xea, 0x53,
-	0x37, 0xe6, 0x9b, 0x4f, 0x82, 0xaf, 0xfe, 0x81, 0x0e, 0x7c, 0x95, 0xac, 0xb9, 0x76, 0x81, 0xb5,
-	0x09, 0x49, 0x8a, 0x1f, 0xc1, 0x4f, 0xe9, 0x77, 0x91, 0x24, 0xdb, 0x18, 0x16, 0xc4, 0x3d, 0xde,
-	0xdb, 0xf3, 0x3b, 0x3d, 0xf7, 0x04, 0xc6, 0x52, 0x73, 0xd4, 0xef, 0x35, 0x6b, 0x58, 0x85, 0x35,
-	0x36, 0x36, 0x57, 0x5a, 0x5a, 0x49, 0x07, 0x58, 0xca, 0xba, 0x46, 0x5d, 0xe2, 0xe4, 0xb6, 0x92,
-	0xb2, 0xda, 0xe0, 0xcc, 0x7f, 0x58, 0xb5, 0x1f, 0xb3, 0x4f, 0xcd, 0x94, 0x42, 0x6d, 0x82, 0x74,
-	0xfa, 0x45, 0xa0, 0xf7, 0xea, 0x5c, 0xe8, 0x05, 0x44, 0x82, 0x27, 0x24, 0x25, 0xd9, 0xa0, 0x88,
-	0x04, 0xa7, 0x57, 0xd0, 0x13, 0x16, 0x6b, 0x93, 0x44, 0x69, 0x9c, 0x0d, 0x8a, 0x30, 0xd0, 0x14,
-	0x86, 0x1c, 0x4d, 0xa9, 0x85, 0xb2, 0x42, 0x36, 0x49, 0xec, 0xe5, 0x87, 0x2b, 0xc7, 0x29, 0x2d,
-	0x4a, 0x4c, 0x4e, 0x52, 0x92, 0x45, 0x45, 0x18, 0xb6, 0x9c, 0x15, 0x0d, 0xf3, 0x5c, 0x6f, 0xcf,
-	0xed, 0x56, 0xd3, 0x0d, 0x8c, 0x1e, 0x65, 0xbd, 0x12, 0x0d, 0xf2, 0xe5, 0x5a, 0x28, 0x77, 0x4e,
-	0x27, 0xd3, 0x18, 0xfa, 0xc6, 0x32, 0xdb, 0xba, 0x50, 0x6e, 0xb7, 0x9d, 0xe8, 0x1c, 0xc0, 0x57,
-	0x61, 0x9e, 0x84, 0xb1, 0x49, 0x9c, 0xc6, 0xd9, 0x70, 0x31, 0xca, 0xf7, 0x2d, 0xe4, 0xfe, 0xc2,
-	0xe2, 0x40, 0xb3, 0xf8, 0x8e, 0xe0, 0xd2, 0x6f, 0x9f, 0xf7, 0xe5, 0xd1, 0x7b, 0x38, 0x65, 0x9c,
-	0x87, 0x36, 0x3a, 0xf4, 0xe4, 0x26, 0x0f, 0x55, 0xe6, 0xbb, 0x2a, 0xf3, 0xa5, 0xd5, 0xa2, 0xa9,
-	0xde, 0xd8, 0xa6, 0x45, 0xc7, 0x56, 0x68, 0x03, 0xfb, 0xa7, 0x72, 0xd2, 0x71, 0xa6, 0x0f, 0x70,
-	0x66, 0x90, 0xe9, 0x72, 0xed, 0x47, 0x73, 0x2c, 0x3f, 0x27, 0xce, 0xa1, 0x55, 0x9c, 0x59, 0xdc,
-	0x3a, 0x1c, 0x99, 0x3e, 0x23, 0xf4, 0x05, 0xce, 0x95, 0x96, 0x25, 0x1a, 0xf3, 0xaf, 0x10, 0xd7,
-	0x07, 0x3f, 0xf8, 0xfd, 0x6a, 0x19, 0x99, 0x93, 0x55, 0xdf, 0x63, 0x77, 0x3f, 0x01, 0x00, 0x00,
-	0xff, 0xff, 0xed, 0x7a, 0x7f, 0xf8, 0xa3, 0x02, 0x00, 0x00,
+var File_order_management_proto protoreflect.FileDescriptor
+
+var file_order_management_proto_rawDesc = []byte{
+	0x0a, 0x16, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
+	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
+	0x72, 0x63, 0x65, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a,
+	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
+	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74,
+	0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
+	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
+	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
+	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
+	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
+	0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a,
+	0x10, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
+	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
+	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
+	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x6f, 0x72, 0x64,
+	0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
+	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
+	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xdd, 0x02, 0x0a, 0x0f,
+	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
+	0x3a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x65, 0x63,
+	0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1c, 0x2e,
+	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
+	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x67,
+	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x10, 0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
+	0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63,
+	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x10, 0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
+	0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x30, 0x01, 0x12, 0x40, 0x0a, 0x0c, 0x75, 0x70, 0x64,
+	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x10, 0x2e, 0x65, 0x63, 0x6f, 0x6d,
+	0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x67, 0x6f,
+	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
+	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x28, 0x01, 0x12, 0x4e, 0x0a, 0x0d, 0x70,
+	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
+	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1b, 0x2e, 0x65, 0x63, 0x6f,
+	0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x53,
+	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x01, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f,
+	0x74, 0x6f, 0x33,
+}
+
+var (
+	file_order_management_proto_rawDescOnce sync.Once
+	file_order_management_proto_rawDescData = file_order_management_proto_rawDesc
+)
+
+func file_order_management_proto_rawDescGZIP() []byte {
+	file_order_management_proto_rawDescOnce.Do(func() {
+		file_order_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_management_proto_rawDescData)
+	})
+	return file_order_management_proto_rawDescData
+}
+
+var file_order_management_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
+var file_order_management_proto_goTypes = []interface{}{
+	(*Order)(nil),                // 0: ecommerce.Order
+	(*CombinedShipment)(nil),     // 1: ecommerce.CombinedShipment
+	(*wrappers.StringValue)(nil), // 2: google.protobuf.StringValue
+}
+var file_order_management_proto_depIdxs = []int32{
+	0, // 0: ecommerce.CombinedShipment.ordersList:type_name -> ecommerce.Order
+	0, // 1: ecommerce.OrderManagement.addOrder:input_type -> ecommerce.Order
+	2, // 2: ecommerce.OrderManagement.getOrder:input_type -> google.protobuf.StringValue
+	2, // 3: ecommerce.OrderManagement.searchOrders:input_type -> google.protobuf.StringValue
+	0, // 4: ecommerce.OrderManagement.updateOrders:input_type -> ecommerce.Order
+	2, // 5: ecommerce.OrderManagement.processOrders:input_type -> google.protobuf.StringValue
+	2, // 6: ecommerce.OrderManagement.addOrder:output_type -> google.protobuf.StringValue
+	0, // 7: ecommerce.OrderManagement.getOrder:output_type -> ecommerce.Order
+	0, // 8: ecommerce.OrderManagement.searchOrders:output_type -> ecommerce.Order
+	2, // 9: ecommerce.OrderManagement.updateOrders:output_type -> google.protobuf.StringValue
+	1, // 10: ecommerce.OrderManagement.processOrders:output_type -> ecommerce.CombinedShipment
+	6, // [6:11] is the sub-list for method output_type
+	1, // [1:6] is the sub-list for method input_type
+	1, // [1:1] is the sub-list for extension type_name
+	1, // [1:1] is the sub-list for extension extendee
+	0, // [0:1] is the sub-list for field type_name
+}
+
+func init() { file_order_management_proto_init() }
+func file_order_management_proto_init() {
+	if File_order_management_proto != nil {
+		return
+	}
+	if !protoimpl.UnsafeEnabled {
+		file_order_management_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*Order); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_order_management_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*CombinedShipment); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+	}
+	type x struct{}
+	out := protoimpl.TypeBuilder{
+		File: protoimpl.DescBuilder{
+			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
+			RawDescriptor: file_order_management_proto_rawDesc,
+			NumEnums:      0,
+			NumMessages:   2,
+			NumExtensions: 0,
+			NumServices:   1,
+		},
+		GoTypes:           file_order_management_proto_goTypes,
+		DependencyIndexes: file_order_management_proto_depIdxs,
+		MessageInfos:      file_order_management_proto_msgTypes,
+	}.Build()
+	File_order_management_proto = out.File
+	file_order_management_proto_rawDesc = nil
+	file_order_management_proto_goTypes = nil
+	file_order_management_proto_depIdxs = nil
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
 var _ context.Context
-var _ grpc.ClientConn
+var _ grpc.ClientConnInterface
 
 // This is a compile-time assertion to ensure that this generated file
 // is compatible with the grpc package it is being compiled against.
-const _ = grpc.SupportPackageIsVersion4
+const _ = grpc.SupportPackageIsVersion6
 
 // OrderManagementClient is the client API for OrderManagement service.
 //
@@ -203,10 +330,10 @@ type OrderManagementClient interface {
 }
 
 type orderManagementClient struct {
-	cc *grpc.ClientConn
+	cc grpc.ClientConnInterface
 }
 
-func NewOrderManagementClient(cc *grpc.ClientConn) OrderManagementClient {
+func NewOrderManagementClient(cc grpc.ClientConnInterface) OrderManagementClient {
 	return &orderManagementClient{cc}
 }
 
@@ -338,19 +465,19 @@ type OrderManagementServer interface {
 type UnimplementedOrderManagementServer struct {
 }
 
-func (*UnimplementedOrderManagementServer) AddOrder(ctx context.Context, req *Order) (*wrappers.StringValue, error) {
+func (*UnimplementedOrderManagementServer) AddOrder(context.Context, *Order) (*wrappers.StringValue, error) {
 	return nil, status.Errorf(codes.Unimplemented, "method AddOrder not implemented")
 }
-func (*UnimplementedOrderManagementServer) GetOrder(ctx context.Context, req *wrappers.StringValue) (*Order, error) {
+func (*UnimplementedOrderManagementServer) GetOrder(context.Context, *wrappers.StringValue) (*Order, error) {
 	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
 }
-func (*UnimplementedOrderManagementServer) SearchOrders(req *wrappers.StringValue, srv OrderManagement_SearchOrdersServer) error {
+func (*UnimplementedOrderManagementServer) SearchOrders(*wrappers.StringValue, OrderManagement_SearchOrdersServer) error {
 	return status.Errorf(codes.Unimplemented, "method SearchOrders not implemented")
 }
-func (*UnimplementedOrderManagementServer) UpdateOrders(srv OrderManagement_UpdateOrdersServer) error {
+func (*UnimplementedOrderManagementServer) UpdateOrders(OrderManagement_UpdateOrdersServer) error {
 	return status.Errorf(codes.Unimplemented, "method UpdateOrders not implemented")
 }
-func (*UnimplementedOrderManagementServer) ProcessOrders(srv OrderManagement_ProcessOrdersServer) error {
+func (*UnimplementedOrderManagementServer) ProcessOrders(OrderManagement_ProcessOrdersServer) error {
 	return status.Errorf(codes.Unimplemented, "method ProcessOrders not implemented")
 }
 
diff --git a/ch03/order-service/go/client/go.mod b/ch03/order-service/go/client/go.mod
index 8a79466..b81696b 100644
--- a/ch03/order-service/go/client/go.mod
+++ b/ch03/order-service/go/client/go.mod
@@ -3,6 +3,7 @@ module ordermgt/client
 go 1.12
 
 require (
-	github.com/golang/protobuf v1.3.2
-	google.golang.org/grpc v1.24.0
+	github.com/golang/protobuf v1.4.1
+	google.golang.org/grpc v1.27.0
+	google.golang.org/protobuf v1.25.0
 )
diff --git a/ch03/order-service/go/client/go.sum b/ch03/order-service/go/client/go.sum
index 61e1b1b..e78d389 100644
--- a/ch03/order-service/go/client/go.sum
+++ b/ch03/order-service/go/client/go.sum
@@ -1,25 +1,73 @@
 cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=
 github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=
+github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=
 github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=
+github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
+github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=
+github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b h1:VKtxabqXZkF25pY9ekfRL6a582T4P37/31XEstQ5p58=
 github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=
 github.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=
+github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
 github.com/golang/protobuf v1.3.2 h1:6nsPYzhq5kReh6QImI3k5qWzO4PEbvbIW2cwSfR/6xs=
 github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
+github.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=
+github.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=
+github.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=
+github.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=
+github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=
+github.com/golang/protobuf v1.4.1 h1:ZFgWrT+bLgsYPirOnRfKLYJLvssAegOj/hgyMFdJZe0=
+github.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=
 github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=
+github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
+github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
+github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
+github.com/google/go-cmp v0.5.0 h1:/QaMHBdZ26BB3SSst0Iwl10Epc+xhTquomWX0oZEB6w=
+github.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
+github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
 golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
+golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
+golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=
+golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=
 golang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
+golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
+golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
+golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
 golang.org/x/net v0.0.0-20190311183353-d8887717615a h1:oWX7TPOiFAMXLq8o0ikBYfCJVlRHBcsciT5bXOrH628=
 golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
 golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
+golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
+golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
 golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
+golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
+golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a h1:1BGLXjeY4akVXGgbC9HugT3Jv3hCI0z56oJR5vAMgBU=
 golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
 golang.org/x/text v0.3.0 h1:g61tztE5qeGQ89tm6NTjjM9VPIm088od1l6aSorWRWg=
 golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
+golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
+golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=
 golang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
 golang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
+golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543 h1:E7g+9GITq07hpfrRu66IVDexMakfv52eLZ2CXBWiKr4=
+golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
 google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=
+google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
 google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8 h1:Nw54tB0rB7hY/N0NQvRW8DG4Yk3Q6T9cu9RcFQDu1tc=
 google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
-google.golang.org/grpc v1.24.0 h1:vb/1TCsVn3DcJlQ0Gs1yB1pKI6Do2/QNwxdKqmc/b0s=
-google.golang.org/grpc v1.24.0/go.mod h1:XDChyiUovWa60DnaeDeZmSW86xtLtjtZbwvSiRnRtcA=
+google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=
+google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013 h1:+kGHl1aib/qcwaRi1CbqBZ1rk19r85MNUf8HaBghugY=
+google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=
+google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=
+google.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
+google.golang.org/grpc v1.27.0 h1:rRYRFMVgRv6E0D70Skyfsr28tDXIuuPZyWGMPdMcnXg=
+google.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
+google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=
+google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=
+google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=
+google.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=
+google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=
+google.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
+google.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
+google.golang.org/protobuf v1.25.0 h1:Ejskq+SyPohKW+1uil0JJMtmHCgJPJ/qWTxr8qp+R4c=
+google.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=
+honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
 honnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
diff --git a/ch03/order-service/go/client/main.go b/ch03/order-service/go/client/main.go
index 1f73437..fe0e2be 100644
--- a/ch03/order-service/go/client/main.go
+++ b/ch03/order-service/go/client/main.go
@@ -2,7 +2,9 @@ package main
 
 import (
 	"context"
+	wrapper "github.com/golang/protobuf/ptypes/wrappers"
 	"google.golang.org/grpc"
+	"io"
 	"log"
 	pb "ordermgt/client/ecommerce"
 	"time"
@@ -35,91 +37,96 @@ func main() {
 	// log.Print("GetOrder Response -> : ", retrievedOrder)
 
 	// // Search Order : Server streaming scenario
-	// searchStream, 	_ := client.SearchOrders(ctx, &wrapper.StringValue{Value: "Google"})
-	// for {
-	// 	searchOrder, err := searchStream.Recv()
-	// 	if err == io.EOF {
-	// 		log.Print("EOF")
-	// 		break
-	// 	}
-
-	// 	if err == nil {
-	// 		log.Print("Search Result : ", searchOrder)
-	// 	}
-	// }
+	searchStream, 	_ := client.SearchOrders(ctx, &wrapper.StringValue{Value: "Google"})
+	for {
+		searchOrder, err := searchStream.Recv()
+		if err == io.EOF {
+			log.Print("EOF")
+			break
+		}
+
+		if err == nil {
+			log.Print("Search Result : ", searchOrder)
+		}
+	}
 
 	// // =========================================
 	// // Update Orders : Client streaming scenario
-	// updOrder1 := pb.Order{Id: "102", Items:[]string{"Google Pixel 3A", "Google Pixel Book"}, Destination:"Mountain View, CA", Price:1100.00}
-	// updOrder2 := pb.Order{Id: "103", Items:[]string{"Apple Watch S4", "Mac Book Pro", "iPad Pro"}, Destination:"San Jose, CA", Price:2800.00}
-	// updOrder3 := pb.Order{Id: "104", Items:[]string{"Google Home Mini", "Google Nest Hub", "iPad Mini"}, Destination:"Mountain View, CA", Price:2200.00}
+	updOrder1 := pb.Order{Id: "102", Items:[]string{"Google Pixel 3A", "Google Pixel Book"}, Destination:"Mountain View, CA", Price:1100.00}
+	updOrder2 := pb.Order{Id: "103", Items:[]string{"Apple Watch S4", "Mac Book Pro", "iPad Pro"}, Destination:"San Jose, CA", Price:2800.00}
+	updOrder3 := pb.Order{Id: "104", Items:[]string{"Google Home Mini", "Google Nest Hub", "iPad Mini"}, Destination:"Mountain View, CA", Price:2200.00}
+
+	updateStream, err := client.UpdateOrders(ctx)
 
-	// updateStream, err := client.UpdateOrders(ctx)
+	if err != nil {
+		log.Fatalf("%v.UpdateOrders(_) = _, %v", client, err)
+	}
 
-	// if err != nil {
-	// 	log.Fatalf("%v.UpdateOrders(_) = _, %v", client, err)
-	// }
+	// Updating order 1
+	if err := updateStream.Send(&updOrder1); err != nil {
+		log.Fatalf("%v.Send(%v) = %v", updateStream, updOrder1, err)
+	}
 
-	// // Updating order 1
-	// if err := updateStream.Send(&updOrder1); err != nil {
-	// 	log.Fatalf("%v.Send(%v) = %v", updateStream, updOrder1, err)
-	// }
+	// Updating order 2
+	if err := updateStream.Send(&updOrder2); err != nil {
+		log.Fatalf("%v.Send(%v) = %v", updateStream, updOrder2, err)
+	}
 
-	// // Updating order 2
-	// if err := updateStream.Send(&updOrder2); err != nil {
-	// 	log.Fatalf("%v.Send(%v) = %v", updateStream, updOrder2, err)
-	// }
+	// Updating order 3
+	if err := updateStream.Send(&updOrder3); err != nil {
+		log.Fatalf("%v.Send(%v) = %v", updateStream, updOrder3, err)
+	}
 
-	// // Updating order 3
-	// if err := updateStream.Send(&updOrder3); err != nil {
-	// 	log.Fatalf("%v.Send(%v) = %v", updateStream, updOrder3, err)
-	// }
+	updateRes, err := updateStream.CloseAndRecv()
+	if err != nil {
+		log.Fatalf("%v.CloseAndRecv() got error %v, want %v", updateStream, err, nil)
+	}
+	log.Printf("Update Orders Res : %s", updateRes)
 
-	// updateRes, err := updateStream.CloseAndRecv()
-	// if err != nil {
-	// 	log.Fatalf("%v.CloseAndRecv() got error %v, want %v", updateStream, err, nil)
-	// }
-	// log.Printf("Update Orders Res : %s", updateRes)
+	// =========================================
+	// Process Order : Bi-di streaming scenario
+	streamProcOrder, err := client.ProcessOrders(ctx)
+	if err != nil {
+		log.Fatalf("%v.ProcessOrders(_) = _, %v", client, err)
+	}
 
-	// // =========================================
-	// // Process Order : Bi-di streaming scenario
-	// streamProcOrder, err := client.ProcessOrders(ctx)
-	// if err != nil {
-	// 	log.Fatalf("%v.ProcessOrders(_) = _, %v", client, err)
-	// }
-
-	// if err := streamProcOrder.Send(&wrapper.StringValue{Value:"102"}); err != nil {
-	// 	log.Fatalf("%v.Send(%v) = %v", client, "102", err)
-	// }
-
-	// if err := streamProcOrder.Send(&wrapper.StringValue{Value:"103"}); err != nil {
-	// 	log.Fatalf("%v.Send(%v) = %v", client, "103", err)
-	// }
-
-	// if err := streamProcOrder.Send(&wrapper.StringValue{Value:"104"}); err != nil {
-	// 	log.Fatalf("%v.Send(%v) = %v", client, "104", err)
-	// }
-
-	// channel := make(chan struct{})
-	// go asncClientBidirectionalRPC(streamProcOrder, channel)
-	// time.Sleep(time.Millisecond * 1000)
-
-	// if err := streamProcOrder.Send(&wrapper.StringValue{Value:"101"}); err != nil {
-	// 	log.Fatalf("%v.Send(%v) = %v", client, "101", err)
-	// }
-	// if err := streamProcOrder.CloseSend(); err != nil {
-	// 	log.Fatal(err)
-	// }
-	// <- channel
+	if err := streamProcOrder.Send(&wrapper.StringValue{Value:"102"}); err != nil {
+		log.Fatalf("%v.Send(%v) = %v", client, "102", err)
+	}
+
+	if err := streamProcOrder.Send(&wrapper.StringValue{Value:"103"}); err != nil {
+		log.Fatalf("%v.Send(%v) = %v", client, "103", err)
+	}
+
+	if err := streamProcOrder.Send(&wrapper.StringValue{Value:"104"}); err != nil {
+		log.Fatalf("%v.Send(%v) = %v", client, "104", err)
+	}
+
+	channel := make(chan struct{})
+	go asncClientBidirectionalRPC(streamProcOrder, channel)
+	time.Sleep(time.Millisecond * 1000)
+
+	if err := streamProcOrder.Send(&wrapper.StringValue{Value:"101"}); err != nil {
+		log.Fatalf("%v.Send(%v) = %v", client, "101", err)
+	}
+	if err := streamProcOrder.CloseSend(); err != nil {
+		log.Fatal(err)
+	}
+	log.Println("I am here going to wait forever")
+	<- channel
 }
 
-//func asncClientBidirectionalRPC(streamProcOrder pb.OrderManagement_ProcessOrdersClient, c chan struct{}) {
-//	for {
-//		combinedShipment, errProcOrder := streamProcOrder.Recv()
-//		if errProcOrder == io.EOF {
-//			break
-//		}
-//		log.Printf("Combined shipment : ", combinedShipment.OrdersList)
-//	}
-//	<-c
-//}
+func asncClientBidirectionalRPC(streamProcOrder pb.OrderManagement_ProcessOrdersClient, c chan struct{}) {
+	for {
+		combinedShipment, errProcOrder := streamProcOrder.Recv()
+		if errProcOrder == io.EOF {
+			break
+		}
+		log.Printf("Combined shipment : ", combinedShipment.OrdersList)
+	}
+	// close(c) to close client since all is done at this point as sent orders from client and processed from server
+	// server itself  will not send anythingas EOF recieved form server
+	// Also see /Users/growth/drinnovations/mywork_jmd/gogrpc/gooreillygrpcuprunning/samples/ch05/cancellation/order-service/go/client/main.go
+	// same function with c <- true as it is the end of processing
+	<- c
+}
diff --git a/ch03/order-service/go/service/ecommerce/order_management.pb.go b/ch03/order-service/go/service/ecommerce/order_management.pb.go
index e2434d1..6e97d82 100644
--- a/ch03/order-service/go/service/ecommerce/order_management.pb.go
+++ b/ch03/order-service/go/service/ecommerce/order_management.pb.go
@@ -1,195 +1,322 @@
+// Deprecated !!!!
+
 // Code generated by protoc-gen-go. DO NOT EDIT.
+// versions:
+// 	protoc-gen-go v1.25.0-devel
+// 	protoc        v3.13.0
 // source: order_management.proto
 
 package ecommerce
 
 import (
 	context "context"
-	fmt "fmt"
 	proto "github.com/golang/protobuf/proto"
 	wrappers "github.com/golang/protobuf/ptypes/wrappers"
 	grpc "google.golang.org/grpc"
 	codes "google.golang.org/grpc/codes"
 	status "google.golang.org/grpc/status"
-	math "math"
+	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
+	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
+	reflect "reflect"
+	sync "sync"
 )
 
-// Reference imports to suppress errors if they are not otherwise used.
-var _ = proto.Marshal
-var _ = fmt.Errorf
-var _ = math.Inf
+const (
+	// Verify that this generated code is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
+	// Verify that runtime/protoimpl is sufficiently up-to-date.
+	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
+)
 
-// This is a compile-time assertion to ensure that this generated file
-// is compatible with the proto package it is being compiled against.
-// A compilation error at this line likely means your copy of the
-// proto package needs to be updated.
-const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
+// This is a compile-time assertion that a sufficiently up-to-date version
+// of the legacy proto package is being used.
+const _ = proto.ProtoPackageIsVersion4
 
 type Order struct {
-	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
-	Items                []string `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
-	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
-	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
-	Destination          string   `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
-
-func (m *Order) Reset()         { *m = Order{} }
-func (m *Order) String() string { return proto.CompactTextString(m) }
-func (*Order) ProtoMessage()    {}
-func (*Order) Descriptor() ([]byte, []int) {
-	return fileDescriptor_6653354279552460, []int{0}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
+
+	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Items       []string `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
+	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
+	Price       float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
+	Destination string   `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
+}
+
+func (x *Order) Reset() {
+	*x = Order{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_order_management_proto_msgTypes[0]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
 
-func (m *Order) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_Order.Unmarshal(m, b)
-}
-func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
-}
-func (m *Order) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Order.Merge(m, src)
+func (x *Order) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *Order) XXX_Size() int {
-	return xxx_messageInfo_Order.Size(m)
-}
-func (m *Order) XXX_DiscardUnknown() {
-	xxx_messageInfo_Order.DiscardUnknown(m)
+
+func (*Order) ProtoMessage() {}
+
+func (x *Order) ProtoReflect() protoreflect.Message {
+	mi := &file_order_management_proto_msgTypes[0]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_Order proto.InternalMessageInfo
+// Deprecated: Use Order.ProtoReflect.Descriptor instead.
+func (*Order) Descriptor() ([]byte, []int) {
+	return file_order_management_proto_rawDescGZIP(), []int{0}
+}
 
-func (m *Order) GetId() string {
-	if m != nil {
-		return m.Id
+func (x *Order) GetId() string {
+	if x != nil {
+		return x.Id
 	}
 	return ""
 }
 
-func (m *Order) GetItems() []string {
-	if m != nil {
-		return m.Items
+func (x *Order) GetItems() []string {
+	if x != nil {
+		return x.Items
 	}
 	return nil
 }
 
-func (m *Order) GetDescription() string {
-	if m != nil {
-		return m.Description
+func (x *Order) GetDescription() string {
+	if x != nil {
+		return x.Description
 	}
 	return ""
 }
 
-func (m *Order) GetPrice() float32 {
-	if m != nil {
-		return m.Price
+func (x *Order) GetPrice() float32 {
+	if x != nil {
+		return x.Price
 	}
 	return 0
 }
 
-func (m *Order) GetDestination() string {
-	if m != nil {
-		return m.Destination
+func (x *Order) GetDestination() string {
+	if x != nil {
+		return x.Destination
 	}
 	return ""
 }
 
 type CombinedShipment struct {
-	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
-	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
-	OrdersList           []*Order `protobuf:"bytes,3,rep,name=ordersList,proto3" json:"ordersList,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
-}
+	state         protoimpl.MessageState
+	sizeCache     protoimpl.SizeCache
+	unknownFields protoimpl.UnknownFields
 
-func (m *CombinedShipment) Reset()         { *m = CombinedShipment{} }
-func (m *CombinedShipment) String() string { return proto.CompactTextString(m) }
-func (*CombinedShipment) ProtoMessage()    {}
-func (*CombinedShipment) Descriptor() ([]byte, []int) {
-	return fileDescriptor_6653354279552460, []int{1}
+	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Status     string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
+	OrdersList []*Order `protobuf:"bytes,3,rep,name=ordersList,proto3" json:"ordersList,omitempty"`
 }
 
-func (m *CombinedShipment) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_CombinedShipment.Unmarshal(m, b)
-}
-func (m *CombinedShipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_CombinedShipment.Marshal(b, m, deterministic)
-}
-func (m *CombinedShipment) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_CombinedShipment.Merge(m, src)
+func (x *CombinedShipment) Reset() {
+	*x = CombinedShipment{}
+	if protoimpl.UnsafeEnabled {
+		mi := &file_order_management_proto_msgTypes[1]
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		ms.StoreMessageInfo(mi)
+	}
 }
-func (m *CombinedShipment) XXX_Size() int {
-	return xxx_messageInfo_CombinedShipment.Size(m)
+
+func (x *CombinedShipment) String() string {
+	return protoimpl.X.MessageStringOf(x)
 }
-func (m *CombinedShipment) XXX_DiscardUnknown() {
-	xxx_messageInfo_CombinedShipment.DiscardUnknown(m)
+
+func (*CombinedShipment) ProtoMessage() {}
+
+func (x *CombinedShipment) ProtoReflect() protoreflect.Message {
+	mi := &file_order_management_proto_msgTypes[1]
+	if protoimpl.UnsafeEnabled && x != nil {
+		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
+		if ms.LoadMessageInfo() == nil {
+			ms.StoreMessageInfo(mi)
+		}
+		return ms
+	}
+	return mi.MessageOf(x)
 }
 
-var xxx_messageInfo_CombinedShipment proto.InternalMessageInfo
+// Deprecated: Use CombinedShipment.ProtoReflect.Descriptor instead.
+func (*CombinedShipment) Descriptor() ([]byte, []int) {
+	return file_order_management_proto_rawDescGZIP(), []int{1}
+}
 
-func (m *CombinedShipment) GetId() string {
-	if m != nil {
-		return m.Id
+func (x *CombinedShipment) GetId() string {
+	if x != nil {
+		return x.Id
 	}
 	return ""
 }
 
-func (m *CombinedShipment) GetStatus() string {
-	if m != nil {
-		return m.Status
+func (x *CombinedShipment) GetStatus() string {
+	if x != nil {
+		return x.Status
 	}
 	return ""
 }
 
-func (m *CombinedShipment) GetOrdersList() []*Order {
-	if m != nil {
-		return m.OrdersList
+func (x *CombinedShipment) GetOrdersList() []*Order {
+	if x != nil {
+		return x.OrdersList
 	}
 	return nil
 }
 
-func init() {
-	proto.RegisterType((*Order)(nil), "ecommerce.Order")
-	proto.RegisterType((*CombinedShipment)(nil), "ecommerce.CombinedShipment")
-}
-
-func init() { proto.RegisterFile("order_management.proto", fileDescriptor_6653354279552460) }
-
-var fileDescriptor_6653354279552460 = []byte{
-	// 330 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x5f, 0x4b, 0xc3, 0x30,
-	0x14, 0xc5, 0x49, 0xeb, 0x86, 0xbb, 0xf3, 0xcf, 0x08, 0x32, 0xca, 0x14, 0x29, 0x7b, 0xea, 0x53,
-	0x37, 0xe6, 0x9b, 0x4f, 0x82, 0xaf, 0xfe, 0x81, 0x0e, 0x7c, 0x95, 0xac, 0xb9, 0x76, 0x81, 0xb5,
-	0x09, 0x49, 0x8a, 0x1f, 0xc1, 0x4f, 0xe9, 0x77, 0x91, 0x24, 0xdb, 0x18, 0x16, 0xc4, 0x3d, 0xde,
-	0xdb, 0xf3, 0x3b, 0x3d, 0xf7, 0x04, 0xc6, 0x52, 0x73, 0xd4, 0xef, 0x35, 0x6b, 0x58, 0x85, 0x35,
-	0x36, 0x36, 0x57, 0x5a, 0x5a, 0x49, 0x07, 0x58, 0xca, 0xba, 0x46, 0x5d, 0xe2, 0xe4, 0xb6, 0x92,
-	0xb2, 0xda, 0xe0, 0xcc, 0x7f, 0x58, 0xb5, 0x1f, 0xb3, 0x4f, 0xcd, 0x94, 0x42, 0x6d, 0x82, 0x74,
-	0xfa, 0x45, 0xa0, 0xf7, 0xea, 0x5c, 0xe8, 0x05, 0x44, 0x82, 0x27, 0x24, 0x25, 0xd9, 0xa0, 0x88,
-	0x04, 0xa7, 0x57, 0xd0, 0x13, 0x16, 0x6b, 0x93, 0x44, 0x69, 0x9c, 0x0d, 0x8a, 0x30, 0xd0, 0x14,
-	0x86, 0x1c, 0x4d, 0xa9, 0x85, 0xb2, 0x42, 0x36, 0x49, 0xec, 0xe5, 0x87, 0x2b, 0xc7, 0x29, 0x2d,
-	0x4a, 0x4c, 0x4e, 0x52, 0x92, 0x45, 0x45, 0x18, 0xb6, 0x9c, 0x15, 0x0d, 0xf3, 0x5c, 0x6f, 0xcf,
-	0xed, 0x56, 0xd3, 0x0d, 0x8c, 0x1e, 0x65, 0xbd, 0x12, 0x0d, 0xf2, 0xe5, 0x5a, 0x28, 0x77, 0x4e,
-	0x27, 0xd3, 0x18, 0xfa, 0xc6, 0x32, 0xdb, 0xba, 0x50, 0x6e, 0xb7, 0x9d, 0xe8, 0x1c, 0xc0, 0x57,
-	0x61, 0x9e, 0x84, 0xb1, 0x49, 0x9c, 0xc6, 0xd9, 0x70, 0x31, 0xca, 0xf7, 0x2d, 0xe4, 0xfe, 0xc2,
-	0xe2, 0x40, 0xb3, 0xf8, 0x8e, 0xe0, 0xd2, 0x6f, 0x9f, 0xf7, 0xe5, 0xd1, 0x7b, 0x38, 0x65, 0x9c,
-	0x87, 0x36, 0x3a, 0xf4, 0xe4, 0x26, 0x0f, 0x55, 0xe6, 0xbb, 0x2a, 0xf3, 0xa5, 0xd5, 0xa2, 0xa9,
-	0xde, 0xd8, 0xa6, 0x45, 0xc7, 0x56, 0x68, 0x03, 0xfb, 0xa7, 0x72, 0xd2, 0x71, 0xa6, 0x0f, 0x70,
-	0x66, 0x90, 0xe9, 0x72, 0xed, 0x47, 0x73, 0x2c, 0x3f, 0x27, 0xce, 0xa1, 0x55, 0x9c, 0x59, 0xdc,
-	0x3a, 0x1c, 0x99, 0x3e, 0x23, 0xf4, 0x05, 0xce, 0x95, 0x96, 0x25, 0x1a, 0xf3, 0xaf, 0x10, 0xd7,
-	0x07, 0x3f, 0xf8, 0xfd, 0x6a, 0x19, 0x99, 0x93, 0x55, 0xdf, 0x63, 0x77, 0x3f, 0x01, 0x00, 0x00,
-	0xff, 0xff, 0xed, 0x7a, 0x7f, 0xf8, 0xa3, 0x02, 0x00, 0x00,
+var File_order_management_proto protoreflect.FileDescriptor
+
+var file_order_management_proto_rawDesc = []byte{
+	0x0a, 0x16, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
+	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
+	0x72, 0x63, 0x65, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
+	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
+	0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a,
+	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
+	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74,
+	0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
+	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
+	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
+	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
+	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
+	0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a,
+	0x10, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
+	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
+	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
+	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x6f, 0x72, 0x64,
+	0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
+	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
+	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xdd, 0x02, 0x0a, 0x0f,
+	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
+	0x3a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x65, 0x63,
+	0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1c, 0x2e,
+	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
+	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x67,
+	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x10, 0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
+	0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63,
+	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
+	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
+	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x10, 0x2e, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
+	0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x30, 0x01, 0x12, 0x40, 0x0a, 0x0c, 0x75, 0x70, 0x64,
+	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x10, 0x2e, 0x65, 0x63, 0x6f, 0x6d,
+	0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x67, 0x6f,
+	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
+	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x28, 0x01, 0x12, 0x4e, 0x0a, 0x0d, 0x70,
+	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x67,
+	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
+	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1b, 0x2e, 0x65, 0x63, 0x6f,
+	0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x53,
+	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x01, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f,
+	0x74, 0x6f, 0x33,
+}
+
+var (
+	file_order_management_proto_rawDescOnce sync.Once
+	file_order_management_proto_rawDescData = file_order_management_proto_rawDesc
+)
+
+func file_order_management_proto_rawDescGZIP() []byte {
+	file_order_management_proto_rawDescOnce.Do(func() {
+		file_order_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_management_proto_rawDescData)
+	})
+	return file_order_management_proto_rawDescData
+}
+
+var file_order_management_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
+var file_order_management_proto_goTypes = []interface{}{
+	(*Order)(nil),                // 0: ecommerce.Order
+	(*CombinedShipment)(nil),     // 1: ecommerce.CombinedShipment
+	(*wrappers.StringValue)(nil), // 2: google.protobuf.StringValue
+}
+var file_order_management_proto_depIdxs = []int32{
+	0, // 0: ecommerce.CombinedShipment.ordersList:type_name -> ecommerce.Order
+	0, // 1: ecommerce.OrderManagement.addOrder:input_type -> ecommerce.Order
+	2, // 2: ecommerce.OrderManagement.getOrder:input_type -> google.protobuf.StringValue
+	2, // 3: ecommerce.OrderManagement.searchOrders:input_type -> google.protobuf.StringValue
+	0, // 4: ecommerce.OrderManagement.updateOrders:input_type -> ecommerce.Order
+	2, // 5: ecommerce.OrderManagement.processOrders:input_type -> google.protobuf.StringValue
+	2, // 6: ecommerce.OrderManagement.addOrder:output_type -> google.protobuf.StringValue
+	0, // 7: ecommerce.OrderManagement.getOrder:output_type -> ecommerce.Order
+	0, // 8: ecommerce.OrderManagement.searchOrders:output_type -> ecommerce.Order
+	2, // 9: ecommerce.OrderManagement.updateOrders:output_type -> google.protobuf.StringValue
+	1, // 10: ecommerce.OrderManagement.processOrders:output_type -> ecommerce.CombinedShipment
+	6, // [6:11] is the sub-list for method output_type
+	1, // [1:6] is the sub-list for method input_type
+	1, // [1:1] is the sub-list for extension type_name
+	1, // [1:1] is the sub-list for extension extendee
+	0, // [0:1] is the sub-list for field type_name
+}
+
+func init() { file_order_management_proto_init() }
+func file_order_management_proto_init() {
+	if File_order_management_proto != nil {
+		return
+	}
+	if !protoimpl.UnsafeEnabled {
+		file_order_management_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*Order); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+		file_order_management_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
+			switch v := v.(*CombinedShipment); i {
+			case 0:
+				return &v.state
+			case 1:
+				return &v.sizeCache
+			case 2:
+				return &v.unknownFields
+			default:
+				return nil
+			}
+		}
+	}
+	type x struct{}
+	out := protoimpl.TypeBuilder{
+		File: protoimpl.DescBuilder{
+			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
+			RawDescriptor: file_order_management_proto_rawDesc,
+			NumEnums:      0,
+			NumMessages:   2,
+			NumExtensions: 0,
+			NumServices:   1,
+		},
+		GoTypes:           file_order_management_proto_goTypes,
+		DependencyIndexes: file_order_management_proto_depIdxs,
+		MessageInfos:      file_order_management_proto_msgTypes,
+	}.Build()
+	File_order_management_proto = out.File
+	file_order_management_proto_rawDesc = nil
+	file_order_management_proto_goTypes = nil
+	file_order_management_proto_depIdxs = nil
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
 var _ context.Context
-var _ grpc.ClientConn
+var _ grpc.ClientConnInterface
 
 // This is a compile-time assertion to ensure that this generated file
 // is compatible with the grpc package it is being compiled against.
-const _ = grpc.SupportPackageIsVersion4
+const _ = grpc.SupportPackageIsVersion6
 
 // OrderManagementClient is the client API for OrderManagement service.
 //
@@ -203,10 +330,10 @@ type OrderManagementClient interface {
 }
 
 type orderManagementClient struct {
-	cc *grpc.ClientConn
+	cc grpc.ClientConnInterface
 }
 
-func NewOrderManagementClient(cc *grpc.ClientConn) OrderManagementClient {
+func NewOrderManagementClient(cc grpc.ClientConnInterface) OrderManagementClient {
 	return &orderManagementClient{cc}
 }
 
@@ -338,19 +465,19 @@ type OrderManagementServer interface {
 type UnimplementedOrderManagementServer struct {
 }
 
-func (*UnimplementedOrderManagementServer) AddOrder(ctx context.Context, req *Order) (*wrappers.StringValue, error) {
+func (*UnimplementedOrderManagementServer) AddOrder(context.Context, *Order) (*wrappers.StringValue, error) {
 	return nil, status.Errorf(codes.Unimplemented, "method AddOrder not implemented")
 }
-func (*UnimplementedOrderManagementServer) GetOrder(ctx context.Context, req *wrappers.StringValue) (*Order, error) {
+func (*UnimplementedOrderManagementServer) GetOrder(context.Context, *wrappers.StringValue) (*Order, error) {
 	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
 }
-func (*UnimplementedOrderManagementServer) SearchOrders(req *wrappers.StringValue, srv OrderManagement_SearchOrdersServer) error {
+func (*UnimplementedOrderManagementServer) SearchOrders(*wrappers.StringValue, OrderManagement_SearchOrdersServer) error {
 	return status.Errorf(codes.Unimplemented, "method SearchOrders not implemented")
 }
-func (*UnimplementedOrderManagementServer) UpdateOrders(srv OrderManagement_UpdateOrdersServer) error {
+func (*UnimplementedOrderManagementServer) UpdateOrders(OrderManagement_UpdateOrdersServer) error {
 	return status.Errorf(codes.Unimplemented, "method UpdateOrders not implemented")
 }
-func (*UnimplementedOrderManagementServer) ProcessOrders(srv OrderManagement_ProcessOrdersServer) error {
+func (*UnimplementedOrderManagementServer) ProcessOrders(OrderManagement_ProcessOrdersServer) error {
 	return status.Errorf(codes.Unimplemented, "method ProcessOrders not implemented")
 }
 
diff --git a/ch03/order-service/go/service/go.mod b/ch03/order-service/go/service/go.mod
index 9ba9470..50ba336 100644
--- a/ch03/order-service/go/service/go.mod
+++ b/ch03/order-service/go/service/go.mod
@@ -3,6 +3,7 @@ module ordermgt/service
 go 1.12
 
 require (
-	github.com/golang/protobuf v1.3.2
-	google.golang.org/grpc v1.24.0
+	github.com/golang/protobuf v1.4.1
+	google.golang.org/grpc v1.27.0
+	google.golang.org/protobuf v1.25.0
 )
diff --git a/ch03/order-service/go/service/go.sum b/ch03/order-service/go/service/go.sum
index 61e1b1b..e78d389 100644
--- a/ch03/order-service/go/service/go.sum
+++ b/ch03/order-service/go/service/go.sum
@@ -1,25 +1,73 @@
 cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=
 github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=
+github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=
 github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=
+github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
+github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=
+github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b h1:VKtxabqXZkF25pY9ekfRL6a582T4P37/31XEstQ5p58=
 github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=
 github.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=
+github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
 github.com/golang/protobuf v1.3.2 h1:6nsPYzhq5kReh6QImI3k5qWzO4PEbvbIW2cwSfR/6xs=
 github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
+github.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=
+github.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=
+github.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=
+github.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=
+github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=
+github.com/golang/protobuf v1.4.1 h1:ZFgWrT+bLgsYPirOnRfKLYJLvssAegOj/hgyMFdJZe0=
+github.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=
 github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=
+github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
+github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
+github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
+github.com/google/go-cmp v0.5.0 h1:/QaMHBdZ26BB3SSst0Iwl10Epc+xhTquomWX0oZEB6w=
+github.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
+github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
 golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
+golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
+golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=
+golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=
 golang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
+golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
+golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
+golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
 golang.org/x/net v0.0.0-20190311183353-d8887717615a h1:oWX7TPOiFAMXLq8o0ikBYfCJVlRHBcsciT5bXOrH628=
 golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
 golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
+golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
+golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
 golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
+golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
+golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a h1:1BGLXjeY4akVXGgbC9HugT3Jv3hCI0z56oJR5vAMgBU=
 golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
 golang.org/x/text v0.3.0 h1:g61tztE5qeGQ89tm6NTjjM9VPIm088od1l6aSorWRWg=
 golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
+golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
+golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=
 golang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
 golang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
+golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543 h1:E7g+9GITq07hpfrRu66IVDexMakfv52eLZ2CXBWiKr4=
+golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
 google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=
+google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
 google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8 h1:Nw54tB0rB7hY/N0NQvRW8DG4Yk3Q6T9cu9RcFQDu1tc=
 google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
-google.golang.org/grpc v1.24.0 h1:vb/1TCsVn3DcJlQ0Gs1yB1pKI6Do2/QNwxdKqmc/b0s=
-google.golang.org/grpc v1.24.0/go.mod h1:XDChyiUovWa60DnaeDeZmSW86xtLtjtZbwvSiRnRtcA=
+google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=
+google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013 h1:+kGHl1aib/qcwaRi1CbqBZ1rk19r85MNUf8HaBghugY=
+google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=
+google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=
+google.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
+google.golang.org/grpc v1.27.0 h1:rRYRFMVgRv6E0D70Skyfsr28tDXIuuPZyWGMPdMcnXg=
+google.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
+google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=
+google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=
+google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=
+google.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=
+google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=
+google.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
+google.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
+google.golang.org/protobuf v1.25.0 h1:Ejskq+SyPohKW+1uil0JJMtmHCgJPJ/qWTxr8qp+R4c=
+google.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=
+honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
 honnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
diff --git a/ch03/order-service/go/service/main.go b/ch03/order-service/go/service/main.go
index 9f2e5de..0c61922 100644
--- a/ch03/order-service/go/service/main.go
+++ b/ch03/order-service/go/service/main.go
@@ -51,6 +51,7 @@ func (s *server) GetOrder(ctx context.Context, orderId *wrapper.StringValue) (*p
 // Server-side Streaming RPC
 func (s *server) SearchOrders(searchQuery *wrappers.StringValue, stream pb.OrderManagement_SearchOrdersServer) error {
 
+	log.Println("orderMap is %v", orderMap)
 	for key, order := range orderMap {
 		log.Print(key, order)
 		for _, itemStr := range order.Items {
diff --git a/ch05/cancellation/order-service/go/client/go.mod b/ch05/cancellation/order-service/go/client/go.mod
new file mode 100644
index 0000000..2ad73a7
--- /dev/null
+++ b/ch05/cancellation/order-service/go/client/go.mod
@@ -0,0 +1,9 @@
+module client
+
+go 1.15
+
+require (
+	github.com/golang/protobuf v1.4.2
+	github.com/grpc-up-and-running/samples v0.0.0-20200901064603-1f9de1e3efd9
+	google.golang.org/grpc v1.32.0
+)
diff --git a/ch05/cancellation/order-service/go/client/main.go b/ch05/cancellation/order-service/go/client/main.go
index fa8e361..c962c1c 100644
--- a/ch05/cancellation/order-service/go/client/main.go
+++ b/ch05/cancellation/order-service/go/client/main.go
@@ -2,12 +2,13 @@ package main
 
 import (
 	"context"
-	wrapper "github.com/golang/protobuf/ptypes/wrappers"
-	pb "github.com/grpc-up-and-running/samples/ch05/interceptors/order-service/go/order-service-gen"
-	"google.golang.org/grpc"
 	"io"
 	"log"
 	"time"
+
+	wrapper "github.com/golang/protobuf/ptypes/wrappers"
+	pb "github.com/grpc-up-and-running/samples/ch05/interceptors/order-service/go/order-service-gen"
+	"google.golang.org/grpc"
 )
 
 const (
diff --git a/ch05/cancellation/order-service/go/server/go.mod b/ch05/cancellation/order-service/go/server/go.mod
new file mode 100644
index 0000000..4099616
--- /dev/null
+++ b/ch05/cancellation/order-service/go/server/go.mod
@@ -0,0 +1,9 @@
+module server
+
+go 1.15
+
+require (
+	github.com/golang/protobuf v1.4.2
+	github.com/grpc-up-and-running/samples v0.0.0-20200901064603-1f9de1e3efd9
+	google.golang.org/grpc v1.32.0
+)
diff --git a/ch05/deadlines/order-service/go/client/ecommerce/google/protobuf/wrappers.proto b/ch05/deadlines/order-service/go/client/ecommerce/google/protobuf/wrappers.proto
new file mode 100644
index 0000000..0194763
--- /dev/null
+++ b/ch05/deadlines/order-service/go/client/ecommerce/google/protobuf/wrappers.proto
@@ -0,0 +1,118 @@
+// Protocol Buffers - Google's data interchange format
+// Copyright 2008 Google Inc.  All rights reserved.
+// https://developers.google.com/protocol-buffers/
+//
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions are
+// met:
+//
+//     * Redistributions of source code must retain the above copyright
+// notice, this list of conditions and the following disclaimer.
+//     * Redistributions in binary form must reproduce the above
+// copyright notice, this list of conditions and the following disclaimer
+// in the documentation and/or other materials provided with the
+// distribution.
+//     * Neither the name of Google Inc. nor the names of its
+// contributors may be used to endorse or promote products derived from
+// this software without specific prior written permission.
+//
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+// Wrappers for primitive (non-message) types. These types are useful
+// for embedding primitives in the `google.protobuf.Any` type and for places
+// where we need to distinguish between the absence of a primitive
+// typed field and its default value.
+
+syntax = "proto3";
+
+package google.protobuf;
+
+option csharp_namespace = "Google.Protobuf.WellKnownTypes";
+option cc_enable_arenas = true;
+option go_package = "github.com/golang/protobuf/ptypes/wrappers";
+option java_package = "com.google.protobuf";
+option java_outer_classname = "WrappersProto";
+option java_multiple_files = true;
+option objc_class_prefix = "GPB";
+
+// Wrapper message for `double`.
+//
+// The JSON representation for `DoubleValue` is JSON number.
+message DoubleValue {
+  // The double value.
+  double value = 1;
+}
+
+// Wrapper message for `float`.
+//
+// The JSON representation for `FloatValue` is JSON number.
+message FloatValue {
+  // The float value.
+  float value = 1;
+}
+
+// Wrapper message for `int64`.
+//
+// The JSON representation for `Int64Value` is JSON string.
+message Int64Value {
+  // The int64 value.
+  int64 value = 1;
+}
+
+// Wrapper message for `uint64`.
+//
+// The JSON representation for `UInt64Value` is JSON string.
+message UInt64Value {
+  // The uint64 value.
+  uint64 value = 1;
+}
+
+// Wrapper message for `int32`.
+//
+// The JSON representation for `Int32Value` is JSON number.
+message Int32Value {
+  // The int32 value.
+  int32 value = 1;
+}
+
+// Wrapper message for `uint32`.
+//
+// The JSON representation for `UInt32Value` is JSON number.
+message UInt32Value {
+  // The uint32 value.
+  uint32 value = 1;
+}
+
+// Wrapper message for `bool`.
+//
+// The JSON representation for `BoolValue` is JSON `true` and `false`.
+message BoolValue {
+  // The bool value.
+  bool value = 1;
+}
+
+// Wrapper message for `string`.
+//
+// The JSON representation for `StringValue` is JSON string.
+message StringValue {
+  // The string value.
+  string value = 1;
+}
+
+// Wrapper message for `bytes`.
+//
+// The JSON representation for `BytesValue` is JSON string.
+message BytesValue {
+  // The bytes value.
+  bytes value = 1;
+}
diff --git a/ch05/deadlines/order-service/go/client/ecommerce/order_management.pb.go b/ch05/deadlines/order-service/go/client/ecommerce/order_management.pb.go
new file mode 100644
index 0000000..e2434d1
--- /dev/null
+++ b/ch05/deadlines/order-service/go/client/ecommerce/order_management.pb.go
@@ -0,0 +1,502 @@
+// Code generated by protoc-gen-go. DO NOT EDIT.
+// source: order_management.proto
+
+package ecommerce
+
+import (
+	context "context"
+	fmt "fmt"
+	proto "github.com/golang/protobuf/proto"
+	wrappers "github.com/golang/protobuf/ptypes/wrappers"
+	grpc "google.golang.org/grpc"
+	codes "google.golang.org/grpc/codes"
+	status "google.golang.org/grpc/status"
+	math "math"
+)
+
+// Reference imports to suppress errors if they are not otherwise used.
+var _ = proto.Marshal
+var _ = fmt.Errorf
+var _ = math.Inf
+
+// This is a compile-time assertion to ensure that this generated file
+// is compatible with the proto package it is being compiled against.
+// A compilation error at this line likely means your copy of the
+// proto package needs to be updated.
+const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
+
+type Order struct {
+	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Items                []string `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
+	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
+	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
+	Destination          string   `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
+	XXX_NoUnkeyedLiteral struct{} `json:"-"`
+	XXX_unrecognized     []byte   `json:"-"`
+	XXX_sizecache        int32    `json:"-"`
+}
+
+func (m *Order) Reset()         { *m = Order{} }
+func (m *Order) String() string { return proto.CompactTextString(m) }
+func (*Order) ProtoMessage()    {}
+func (*Order) Descriptor() ([]byte, []int) {
+	return fileDescriptor_6653354279552460, []int{0}
+}
+
+func (m *Order) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_Order.Unmarshal(m, b)
+}
+func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
+}
+func (m *Order) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_Order.Merge(m, src)
+}
+func (m *Order) XXX_Size() int {
+	return xxx_messageInfo_Order.Size(m)
+}
+func (m *Order) XXX_DiscardUnknown() {
+	xxx_messageInfo_Order.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_Order proto.InternalMessageInfo
+
+func (m *Order) GetId() string {
+	if m != nil {
+		return m.Id
+	}
+	return ""
+}
+
+func (m *Order) GetItems() []string {
+	if m != nil {
+		return m.Items
+	}
+	return nil
+}
+
+func (m *Order) GetDescription() string {
+	if m != nil {
+		return m.Description
+	}
+	return ""
+}
+
+func (m *Order) GetPrice() float32 {
+	if m != nil {
+		return m.Price
+	}
+	return 0
+}
+
+func (m *Order) GetDestination() string {
+	if m != nil {
+		return m.Destination
+	}
+	return ""
+}
+
+type CombinedShipment struct {
+	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
+	OrdersList           []*Order `protobuf:"bytes,3,rep,name=ordersList,proto3" json:"ordersList,omitempty"`
+	XXX_NoUnkeyedLiteral struct{} `json:"-"`
+	XXX_unrecognized     []byte   `json:"-"`
+	XXX_sizecache        int32    `json:"-"`
+}
+
+func (m *CombinedShipment) Reset()         { *m = CombinedShipment{} }
+func (m *CombinedShipment) String() string { return proto.CompactTextString(m) }
+func (*CombinedShipment) ProtoMessage()    {}
+func (*CombinedShipment) Descriptor() ([]byte, []int) {
+	return fileDescriptor_6653354279552460, []int{1}
+}
+
+func (m *CombinedShipment) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_CombinedShipment.Unmarshal(m, b)
+}
+func (m *CombinedShipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_CombinedShipment.Marshal(b, m, deterministic)
+}
+func (m *CombinedShipment) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_CombinedShipment.Merge(m, src)
+}
+func (m *CombinedShipment) XXX_Size() int {
+	return xxx_messageInfo_CombinedShipment.Size(m)
+}
+func (m *CombinedShipment) XXX_DiscardUnknown() {
+	xxx_messageInfo_CombinedShipment.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_CombinedShipment proto.InternalMessageInfo
+
+func (m *CombinedShipment) GetId() string {
+	if m != nil {
+		return m.Id
+	}
+	return ""
+}
+
+func (m *CombinedShipment) GetStatus() string {
+	if m != nil {
+		return m.Status
+	}
+	return ""
+}
+
+func (m *CombinedShipment) GetOrdersList() []*Order {
+	if m != nil {
+		return m.OrdersList
+	}
+	return nil
+}
+
+func init() {
+	proto.RegisterType((*Order)(nil), "ecommerce.Order")
+	proto.RegisterType((*CombinedShipment)(nil), "ecommerce.CombinedShipment")
+}
+
+func init() { proto.RegisterFile("order_management.proto", fileDescriptor_6653354279552460) }
+
+var fileDescriptor_6653354279552460 = []byte{
+	// 330 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x5f, 0x4b, 0xc3, 0x30,
+	0x14, 0xc5, 0x49, 0xeb, 0x86, 0xbb, 0xf3, 0xcf, 0x08, 0x32, 0xca, 0x14, 0x29, 0x7b, 0xea, 0x53,
+	0x37, 0xe6, 0x9b, 0x4f, 0x82, 0xaf, 0xfe, 0x81, 0x0e, 0x7c, 0x95, 0xac, 0xb9, 0x76, 0x81, 0xb5,
+	0x09, 0x49, 0x8a, 0x1f, 0xc1, 0x4f, 0xe9, 0x77, 0x91, 0x24, 0xdb, 0x18, 0x16, 0xc4, 0x3d, 0xde,
+	0xdb, 0xf3, 0x3b, 0x3d, 0xf7, 0x04, 0xc6, 0x52, 0x73, 0xd4, 0xef, 0x35, 0x6b, 0x58, 0x85, 0x35,
+	0x36, 0x36, 0x57, 0x5a, 0x5a, 0x49, 0x07, 0x58, 0xca, 0xba, 0x46, 0x5d, 0xe2, 0xe4, 0xb6, 0x92,
+	0xb2, 0xda, 0xe0, 0xcc, 0x7f, 0x58, 0xb5, 0x1f, 0xb3, 0x4f, 0xcd, 0x94, 0x42, 0x6d, 0x82, 0x74,
+	0xfa, 0x45, 0xa0, 0xf7, 0xea, 0x5c, 0xe8, 0x05, 0x44, 0x82, 0x27, 0x24, 0x25, 0xd9, 0xa0, 0x88,
+	0x04, 0xa7, 0x57, 0xd0, 0x13, 0x16, 0x6b, 0x93, 0x44, 0x69, 0x9c, 0x0d, 0x8a, 0x30, 0xd0, 0x14,
+	0x86, 0x1c, 0x4d, 0xa9, 0x85, 0xb2, 0x42, 0x36, 0x49, 0xec, 0xe5, 0x87, 0x2b, 0xc7, 0x29, 0x2d,
+	0x4a, 0x4c, 0x4e, 0x52, 0x92, 0x45, 0x45, 0x18, 0xb6, 0x9c, 0x15, 0x0d, 0xf3, 0x5c, 0x6f, 0xcf,
+	0xed, 0x56, 0xd3, 0x0d, 0x8c, 0x1e, 0x65, 0xbd, 0x12, 0x0d, 0xf2, 0xe5, 0x5a, 0x28, 0x77, 0x4e,
+	0x27, 0xd3, 0x18, 0xfa, 0xc6, 0x32, 0xdb, 0xba, 0x50, 0x6e, 0xb7, 0x9d, 0xe8, 0x1c, 0xc0, 0x57,
+	0x61, 0x9e, 0x84, 0xb1, 0x49, 0x9c, 0xc6, 0xd9, 0x70, 0x31, 0xca, 0xf7, 0x2d, 0xe4, 0xfe, 0xc2,
+	0xe2, 0x40, 0xb3, 0xf8, 0x8e, 0xe0, 0xd2, 0x6f, 0x9f, 0xf7, 0xe5, 0xd1, 0x7b, 0x38, 0x65, 0x9c,
+	0x87, 0x36, 0x3a, 0xf4, 0xe4, 0x26, 0x0f, 0x55, 0xe6, 0xbb, 0x2a, 0xf3, 0xa5, 0xd5, 0xa2, 0xa9,
+	0xde, 0xd8, 0xa6, 0x45, 0xc7, 0x56, 0x68, 0x03, 0xfb, 0xa7, 0x72, 0xd2, 0x71, 0xa6, 0x0f, 0x70,
+	0x66, 0x90, 0xe9, 0x72, 0xed, 0x47, 0x73, 0x2c, 0x3f, 0x27, 0xce, 0xa1, 0x55, 0x9c, 0x59, 0xdc,
+	0x3a, 0x1c, 0x99, 0x3e, 0x23, 0xf4, 0x05, 0xce, 0x95, 0x96, 0x25, 0x1a, 0xf3, 0xaf, 0x10, 0xd7,
+	0x07, 0x3f, 0xf8, 0xfd, 0x6a, 0x19, 0x99, 0x93, 0x55, 0xdf, 0x63, 0x77, 0x3f, 0x01, 0x00, 0x00,
+	0xff, 0xff, 0xed, 0x7a, 0x7f, 0xf8, 0xa3, 0x02, 0x00, 0x00,
+}
+
+// Reference imports to suppress errors if they are not otherwise used.
+var _ context.Context
+var _ grpc.ClientConn
+
+// This is a compile-time assertion to ensure that this generated file
+// is compatible with the grpc package it is being compiled against.
+const _ = grpc.SupportPackageIsVersion4
+
+// OrderManagementClient is the client API for OrderManagement service.
+//
+// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
+type OrderManagementClient interface {
+	AddOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*wrappers.StringValue, error)
+	GetOrder(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Order, error)
+	SearchOrders(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (OrderManagement_SearchOrdersClient, error)
+	UpdateOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_UpdateOrdersClient, error)
+	ProcessOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_ProcessOrdersClient, error)
+}
+
+type orderManagementClient struct {
+	cc *grpc.ClientConn
+}
+
+func NewOrderManagementClient(cc *grpc.ClientConn) OrderManagementClient {
+	return &orderManagementClient{cc}
+}
+
+func (c *orderManagementClient) AddOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
+	out := new(wrappers.StringValue)
+	err := c.cc.Invoke(ctx, "/ecommerce.OrderManagement/addOrder", in, out, opts...)
+	if err != nil {
+		return nil, err
+	}
+	return out, nil
+}
+
+func (c *orderManagementClient) GetOrder(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Order, error) {
+	out := new(Order)
+	err := c.cc.Invoke(ctx, "/ecommerce.OrderManagement/getOrder", in, out, opts...)
+	if err != nil {
+		return nil, err
+	}
+	return out, nil
+}
+
+func (c *orderManagementClient) SearchOrders(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (OrderManagement_SearchOrdersClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_OrderManagement_serviceDesc.Streams[0], "/ecommerce.OrderManagement/searchOrders", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &orderManagementSearchOrdersClient{stream}
+	if err := x.ClientStream.SendMsg(in); err != nil {
+		return nil, err
+	}
+	if err := x.ClientStream.CloseSend(); err != nil {
+		return nil, err
+	}
+	return x, nil
+}
+
+type OrderManagement_SearchOrdersClient interface {
+	Recv() (*Order, error)
+	grpc.ClientStream
+}
+
+type orderManagementSearchOrdersClient struct {
+	grpc.ClientStream
+}
+
+func (x *orderManagementSearchOrdersClient) Recv() (*Order, error) {
+	m := new(Order)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+func (c *orderManagementClient) UpdateOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_UpdateOrdersClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_OrderManagement_serviceDesc.Streams[1], "/ecommerce.OrderManagement/updateOrders", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &orderManagementUpdateOrdersClient{stream}
+	return x, nil
+}
+
+type OrderManagement_UpdateOrdersClient interface {
+	Send(*Order) error
+	CloseAndRecv() (*wrappers.StringValue, error)
+	grpc.ClientStream
+}
+
+type orderManagementUpdateOrdersClient struct {
+	grpc.ClientStream
+}
+
+func (x *orderManagementUpdateOrdersClient) Send(m *Order) error {
+	return x.ClientStream.SendMsg(m)
+}
+
+func (x *orderManagementUpdateOrdersClient) CloseAndRecv() (*wrappers.StringValue, error) {
+	if err := x.ClientStream.CloseSend(); err != nil {
+		return nil, err
+	}
+	m := new(wrappers.StringValue)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+func (c *orderManagementClient) ProcessOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_ProcessOrdersClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_OrderManagement_serviceDesc.Streams[2], "/ecommerce.OrderManagement/processOrders", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &orderManagementProcessOrdersClient{stream}
+	return x, nil
+}
+
+type OrderManagement_ProcessOrdersClient interface {
+	Send(*wrappers.StringValue) error
+	Recv() (*CombinedShipment, error)
+	grpc.ClientStream
+}
+
+type orderManagementProcessOrdersClient struct {
+	grpc.ClientStream
+}
+
+func (x *orderManagementProcessOrdersClient) Send(m *wrappers.StringValue) error {
+	return x.ClientStream.SendMsg(m)
+}
+
+func (x *orderManagementProcessOrdersClient) Recv() (*CombinedShipment, error) {
+	m := new(CombinedShipment)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+// OrderManagementServer is the server API for OrderManagement service.
+type OrderManagementServer interface {
+	AddOrder(context.Context, *Order) (*wrappers.StringValue, error)
+	GetOrder(context.Context, *wrappers.StringValue) (*Order, error)
+	SearchOrders(*wrappers.StringValue, OrderManagement_SearchOrdersServer) error
+	UpdateOrders(OrderManagement_UpdateOrdersServer) error
+	ProcessOrders(OrderManagement_ProcessOrdersServer) error
+}
+
+// UnimplementedOrderManagementServer can be embedded to have forward compatible implementations.
+type UnimplementedOrderManagementServer struct {
+}
+
+func (*UnimplementedOrderManagementServer) AddOrder(ctx context.Context, req *Order) (*wrappers.StringValue, error) {
+	return nil, status.Errorf(codes.Unimplemented, "method AddOrder not implemented")
+}
+func (*UnimplementedOrderManagementServer) GetOrder(ctx context.Context, req *wrappers.StringValue) (*Order, error) {
+	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
+}
+func (*UnimplementedOrderManagementServer) SearchOrders(req *wrappers.StringValue, srv OrderManagement_SearchOrdersServer) error {
+	return status.Errorf(codes.Unimplemented, "method SearchOrders not implemented")
+}
+func (*UnimplementedOrderManagementServer) UpdateOrders(srv OrderManagement_UpdateOrdersServer) error {
+	return status.Errorf(codes.Unimplemented, "method UpdateOrders not implemented")
+}
+func (*UnimplementedOrderManagementServer) ProcessOrders(srv OrderManagement_ProcessOrdersServer) error {
+	return status.Errorf(codes.Unimplemented, "method ProcessOrders not implemented")
+}
+
+func RegisterOrderManagementServer(s *grpc.Server, srv OrderManagementServer) {
+	s.RegisterService(&_OrderManagement_serviceDesc, srv)
+}
+
+func _OrderManagement_AddOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(Order)
+	if err := dec(in); err != nil {
+		return nil, err
+	}
+	if interceptor == nil {
+		return srv.(OrderManagementServer).AddOrder(ctx, in)
+	}
+	info := &grpc.UnaryServerInfo{
+		Server:     srv,
+		FullMethod: "/ecommerce.OrderManagement/AddOrder",
+	}
+	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
+		return srv.(OrderManagementServer).AddOrder(ctx, req.(*Order))
+	}
+	return interceptor(ctx, in, info, handler)
+}
+
+func _OrderManagement_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(wrappers.StringValue)
+	if err := dec(in); err != nil {
+		return nil, err
+	}
+	if interceptor == nil {
+		return srv.(OrderManagementServer).GetOrder(ctx, in)
+	}
+	info := &grpc.UnaryServerInfo{
+		Server:     srv,
+		FullMethod: "/ecommerce.OrderManagement/GetOrder",
+	}
+	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
+		return srv.(OrderManagementServer).GetOrder(ctx, req.(*wrappers.StringValue))
+	}
+	return interceptor(ctx, in, info, handler)
+}
+
+func _OrderManagement_SearchOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
+	m := new(wrappers.StringValue)
+	if err := stream.RecvMsg(m); err != nil {
+		return err
+	}
+	return srv.(OrderManagementServer).SearchOrders(m, &orderManagementSearchOrdersServer{stream})
+}
+
+type OrderManagement_SearchOrdersServer interface {
+	Send(*Order) error
+	grpc.ServerStream
+}
+
+type orderManagementSearchOrdersServer struct {
+	grpc.ServerStream
+}
+
+func (x *orderManagementSearchOrdersServer) Send(m *Order) error {
+	return x.ServerStream.SendMsg(m)
+}
+
+func _OrderManagement_UpdateOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
+	return srv.(OrderManagementServer).UpdateOrders(&orderManagementUpdateOrdersServer{stream})
+}
+
+type OrderManagement_UpdateOrdersServer interface {
+	SendAndClose(*wrappers.StringValue) error
+	Recv() (*Order, error)
+	grpc.ServerStream
+}
+
+type orderManagementUpdateOrdersServer struct {
+	grpc.ServerStream
+}
+
+func (x *orderManagementUpdateOrdersServer) SendAndClose(m *wrappers.StringValue) error {
+	return x.ServerStream.SendMsg(m)
+}
+
+func (x *orderManagementUpdateOrdersServer) Recv() (*Order, error) {
+	m := new(Order)
+	if err := x.ServerStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+func _OrderManagement_ProcessOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
+	return srv.(OrderManagementServer).ProcessOrders(&orderManagementProcessOrdersServer{stream})
+}
+
+type OrderManagement_ProcessOrdersServer interface {
+	Send(*CombinedShipment) error
+	Recv() (*wrappers.StringValue, error)
+	grpc.ServerStream
+}
+
+type orderManagementProcessOrdersServer struct {
+	grpc.ServerStream
+}
+
+func (x *orderManagementProcessOrdersServer) Send(m *CombinedShipment) error {
+	return x.ServerStream.SendMsg(m)
+}
+
+func (x *orderManagementProcessOrdersServer) Recv() (*wrappers.StringValue, error) {
+	m := new(wrappers.StringValue)
+	if err := x.ServerStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+var _OrderManagement_serviceDesc = grpc.ServiceDesc{
+	ServiceName: "ecommerce.OrderManagement",
+	HandlerType: (*OrderManagementServer)(nil),
+	Methods: []grpc.MethodDesc{
+		{
+			MethodName: "addOrder",
+			Handler:    _OrderManagement_AddOrder_Handler,
+		},
+		{
+			MethodName: "getOrder",
+			Handler:    _OrderManagement_GetOrder_Handler,
+		},
+	},
+	Streams: []grpc.StreamDesc{
+		{
+			StreamName:    "searchOrders",
+			Handler:       _OrderManagement_SearchOrders_Handler,
+			ServerStreams: true,
+		},
+		{
+			StreamName:    "updateOrders",
+			Handler:       _OrderManagement_UpdateOrders_Handler,
+			ClientStreams: true,
+		},
+		{
+			StreamName:    "processOrders",
+			Handler:       _OrderManagement_ProcessOrders_Handler,
+			ServerStreams: true,
+			ClientStreams: true,
+		},
+	},
+	Metadata: "order_management.proto",
+}
diff --git a/ch05/deadlines/order-service/go/client/ecommerce/order_management.proto b/ch05/deadlines/order-service/go/client/ecommerce/order_management.proto
new file mode 100644
index 0000000..f1aa315
--- /dev/null
+++ b/ch05/deadlines/order-service/go/client/ecommerce/order_management.proto
@@ -0,0 +1,27 @@
+syntax = "proto3";
+
+import "google/protobuf/wrappers.proto";
+
+package ecommerce;
+
+service OrderManagement {
+    rpc addOrder(Order) returns (google.protobuf.StringValue);
+    rpc getOrder(google.protobuf.StringValue) returns (Order);
+    rpc searchOrders(google.protobuf.StringValue) returns (stream Order);
+    rpc updateOrders(stream Order) returns (google.protobuf.StringValue);
+    rpc processOrders(stream google.protobuf.StringValue) returns (stream CombinedShipment);
+}
+
+message Order {
+    string id = 1;
+    repeated string items = 2;
+    string description = 3;
+    float price = 4;
+    string destination = 5;
+}
+
+message CombinedShipment {
+    string id = 1;
+    string status = 2;
+    repeated Order ordersList = 3;
+}
diff --git a/ch05/deadlines/order-service/go/client/go.mod b/ch05/deadlines/order-service/go/client/go.mod
new file mode 100644
index 0000000..eb6163b
--- /dev/null
+++ b/ch05/deadlines/order-service/go/client/go.mod
@@ -0,0 +1,9 @@
+module ordermgt/deadline/client
+
+go 1.12
+
+require (
+	github.com/golang/protobuf v1.4.1
+	google.golang.org/grpc v1.27.0
+	google.golang.org/protobuf v1.25.0
+)
diff --git a/ch05/deadlines/order-service/go/client/main.go b/ch05/deadlines/order-service/go/client/main.go
index 3168bb1..e114f26 100644
--- a/ch05/deadlines/order-service/go/client/main.go
+++ b/ch05/deadlines/order-service/go/client/main.go
@@ -2,7 +2,7 @@ package main
 
 import (
 	"context"
-	pb "github.com/grpc-up-and-running/samples/ch05/interceptors/order-service/go/order-service-gen"
+	pb "ordermgt/deadline/client/ecommerce"
 	"google.golang.org/grpc"
 	"google.golang.org/grpc/status"
 	"log"
@@ -23,7 +23,7 @@ func main() {
 	client := pb.NewOrderManagementClient(conn)
 
 
-	clientDeadline := time.Now().Add(time.Duration(2 * time.Second))
+	clientDeadline := time.Now().Add(time.Duration(4 * time.Second))
 	ctx, cancel := context.WithDeadline(context.Background(), clientDeadline)
 	defer cancel()
 
diff --git a/ch05/deadlines/order-service/go/server/ecommerce/google/protobuf/wrappers.proto b/ch05/deadlines/order-service/go/server/ecommerce/google/protobuf/wrappers.proto
new file mode 100644
index 0000000..0194763
--- /dev/null
+++ b/ch05/deadlines/order-service/go/server/ecommerce/google/protobuf/wrappers.proto
@@ -0,0 +1,118 @@
+// Protocol Buffers - Google's data interchange format
+// Copyright 2008 Google Inc.  All rights reserved.
+// https://developers.google.com/protocol-buffers/
+//
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions are
+// met:
+//
+//     * Redistributions of source code must retain the above copyright
+// notice, this list of conditions and the following disclaimer.
+//     * Redistributions in binary form must reproduce the above
+// copyright notice, this list of conditions and the following disclaimer
+// in the documentation and/or other materials provided with the
+// distribution.
+//     * Neither the name of Google Inc. nor the names of its
+// contributors may be used to endorse or promote products derived from
+// this software without specific prior written permission.
+//
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+// Wrappers for primitive (non-message) types. These types are useful
+// for embedding primitives in the `google.protobuf.Any` type and for places
+// where we need to distinguish between the absence of a primitive
+// typed field and its default value.
+
+syntax = "proto3";
+
+package google.protobuf;
+
+option csharp_namespace = "Google.Protobuf.WellKnownTypes";
+option cc_enable_arenas = true;
+option go_package = "github.com/golang/protobuf/ptypes/wrappers";
+option java_package = "com.google.protobuf";
+option java_outer_classname = "WrappersProto";
+option java_multiple_files = true;
+option objc_class_prefix = "GPB";
+
+// Wrapper message for `double`.
+//
+// The JSON representation for `DoubleValue` is JSON number.
+message DoubleValue {
+  // The double value.
+  double value = 1;
+}
+
+// Wrapper message for `float`.
+//
+// The JSON representation for `FloatValue` is JSON number.
+message FloatValue {
+  // The float value.
+  float value = 1;
+}
+
+// Wrapper message for `int64`.
+//
+// The JSON representation for `Int64Value` is JSON string.
+message Int64Value {
+  // The int64 value.
+  int64 value = 1;
+}
+
+// Wrapper message for `uint64`.
+//
+// The JSON representation for `UInt64Value` is JSON string.
+message UInt64Value {
+  // The uint64 value.
+  uint64 value = 1;
+}
+
+// Wrapper message for `int32`.
+//
+// The JSON representation for `Int32Value` is JSON number.
+message Int32Value {
+  // The int32 value.
+  int32 value = 1;
+}
+
+// Wrapper message for `uint32`.
+//
+// The JSON representation for `UInt32Value` is JSON number.
+message UInt32Value {
+  // The uint32 value.
+  uint32 value = 1;
+}
+
+// Wrapper message for `bool`.
+//
+// The JSON representation for `BoolValue` is JSON `true` and `false`.
+message BoolValue {
+  // The bool value.
+  bool value = 1;
+}
+
+// Wrapper message for `string`.
+//
+// The JSON representation for `StringValue` is JSON string.
+message StringValue {
+  // The string value.
+  string value = 1;
+}
+
+// Wrapper message for `bytes`.
+//
+// The JSON representation for `BytesValue` is JSON string.
+message BytesValue {
+  // The bytes value.
+  bytes value = 1;
+}
diff --git a/ch05/deadlines/order-service/go/server/ecommerce/order_management.pb.go b/ch05/deadlines/order-service/go/server/ecommerce/order_management.pb.go
new file mode 100644
index 0000000..e2434d1
--- /dev/null
+++ b/ch05/deadlines/order-service/go/server/ecommerce/order_management.pb.go
@@ -0,0 +1,502 @@
+// Code generated by protoc-gen-go. DO NOT EDIT.
+// source: order_management.proto
+
+package ecommerce
+
+import (
+	context "context"
+	fmt "fmt"
+	proto "github.com/golang/protobuf/proto"
+	wrappers "github.com/golang/protobuf/ptypes/wrappers"
+	grpc "google.golang.org/grpc"
+	codes "google.golang.org/grpc/codes"
+	status "google.golang.org/grpc/status"
+	math "math"
+)
+
+// Reference imports to suppress errors if they are not otherwise used.
+var _ = proto.Marshal
+var _ = fmt.Errorf
+var _ = math.Inf
+
+// This is a compile-time assertion to ensure that this generated file
+// is compatible with the proto package it is being compiled against.
+// A compilation error at this line likely means your copy of the
+// proto package needs to be updated.
+const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
+
+type Order struct {
+	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Items                []string `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
+	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
+	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
+	Destination          string   `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
+	XXX_NoUnkeyedLiteral struct{} `json:"-"`
+	XXX_unrecognized     []byte   `json:"-"`
+	XXX_sizecache        int32    `json:"-"`
+}
+
+func (m *Order) Reset()         { *m = Order{} }
+func (m *Order) String() string { return proto.CompactTextString(m) }
+func (*Order) ProtoMessage()    {}
+func (*Order) Descriptor() ([]byte, []int) {
+	return fileDescriptor_6653354279552460, []int{0}
+}
+
+func (m *Order) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_Order.Unmarshal(m, b)
+}
+func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
+}
+func (m *Order) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_Order.Merge(m, src)
+}
+func (m *Order) XXX_Size() int {
+	return xxx_messageInfo_Order.Size(m)
+}
+func (m *Order) XXX_DiscardUnknown() {
+	xxx_messageInfo_Order.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_Order proto.InternalMessageInfo
+
+func (m *Order) GetId() string {
+	if m != nil {
+		return m.Id
+	}
+	return ""
+}
+
+func (m *Order) GetItems() []string {
+	if m != nil {
+		return m.Items
+	}
+	return nil
+}
+
+func (m *Order) GetDescription() string {
+	if m != nil {
+		return m.Description
+	}
+	return ""
+}
+
+func (m *Order) GetPrice() float32 {
+	if m != nil {
+		return m.Price
+	}
+	return 0
+}
+
+func (m *Order) GetDestination() string {
+	if m != nil {
+		return m.Destination
+	}
+	return ""
+}
+
+type CombinedShipment struct {
+	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
+	OrdersList           []*Order `protobuf:"bytes,3,rep,name=ordersList,proto3" json:"ordersList,omitempty"`
+	XXX_NoUnkeyedLiteral struct{} `json:"-"`
+	XXX_unrecognized     []byte   `json:"-"`
+	XXX_sizecache        int32    `json:"-"`
+}
+
+func (m *CombinedShipment) Reset()         { *m = CombinedShipment{} }
+func (m *CombinedShipment) String() string { return proto.CompactTextString(m) }
+func (*CombinedShipment) ProtoMessage()    {}
+func (*CombinedShipment) Descriptor() ([]byte, []int) {
+	return fileDescriptor_6653354279552460, []int{1}
+}
+
+func (m *CombinedShipment) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_CombinedShipment.Unmarshal(m, b)
+}
+func (m *CombinedShipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_CombinedShipment.Marshal(b, m, deterministic)
+}
+func (m *CombinedShipment) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_CombinedShipment.Merge(m, src)
+}
+func (m *CombinedShipment) XXX_Size() int {
+	return xxx_messageInfo_CombinedShipment.Size(m)
+}
+func (m *CombinedShipment) XXX_DiscardUnknown() {
+	xxx_messageInfo_CombinedShipment.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_CombinedShipment proto.InternalMessageInfo
+
+func (m *CombinedShipment) GetId() string {
+	if m != nil {
+		return m.Id
+	}
+	return ""
+}
+
+func (m *CombinedShipment) GetStatus() string {
+	if m != nil {
+		return m.Status
+	}
+	return ""
+}
+
+func (m *CombinedShipment) GetOrdersList() []*Order {
+	if m != nil {
+		return m.OrdersList
+	}
+	return nil
+}
+
+func init() {
+	proto.RegisterType((*Order)(nil), "ecommerce.Order")
+	proto.RegisterType((*CombinedShipment)(nil), "ecommerce.CombinedShipment")
+}
+
+func init() { proto.RegisterFile("order_management.proto", fileDescriptor_6653354279552460) }
+
+var fileDescriptor_6653354279552460 = []byte{
+	// 330 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x5f, 0x4b, 0xc3, 0x30,
+	0x14, 0xc5, 0x49, 0xeb, 0x86, 0xbb, 0xf3, 0xcf, 0x08, 0x32, 0xca, 0x14, 0x29, 0x7b, 0xea, 0x53,
+	0x37, 0xe6, 0x9b, 0x4f, 0x82, 0xaf, 0xfe, 0x81, 0x0e, 0x7c, 0x95, 0xac, 0xb9, 0x76, 0x81, 0xb5,
+	0x09, 0x49, 0x8a, 0x1f, 0xc1, 0x4f, 0xe9, 0x77, 0x91, 0x24, 0xdb, 0x18, 0x16, 0xc4, 0x3d, 0xde,
+	0xdb, 0xf3, 0x3b, 0x3d, 0xf7, 0x04, 0xc6, 0x52, 0x73, 0xd4, 0xef, 0x35, 0x6b, 0x58, 0x85, 0x35,
+	0x36, 0x36, 0x57, 0x5a, 0x5a, 0x49, 0x07, 0x58, 0xca, 0xba, 0x46, 0x5d, 0xe2, 0xe4, 0xb6, 0x92,
+	0xb2, 0xda, 0xe0, 0xcc, 0x7f, 0x58, 0xb5, 0x1f, 0xb3, 0x4f, 0xcd, 0x94, 0x42, 0x6d, 0x82, 0x74,
+	0xfa, 0x45, 0xa0, 0xf7, 0xea, 0x5c, 0xe8, 0x05, 0x44, 0x82, 0x27, 0x24, 0x25, 0xd9, 0xa0, 0x88,
+	0x04, 0xa7, 0x57, 0xd0, 0x13, 0x16, 0x6b, 0x93, 0x44, 0x69, 0x9c, 0x0d, 0x8a, 0x30, 0xd0, 0x14,
+	0x86, 0x1c, 0x4d, 0xa9, 0x85, 0xb2, 0x42, 0x36, 0x49, 0xec, 0xe5, 0x87, 0x2b, 0xc7, 0x29, 0x2d,
+	0x4a, 0x4c, 0x4e, 0x52, 0x92, 0x45, 0x45, 0x18, 0xb6, 0x9c, 0x15, 0x0d, 0xf3, 0x5c, 0x6f, 0xcf,
+	0xed, 0x56, 0xd3, 0x0d, 0x8c, 0x1e, 0x65, 0xbd, 0x12, 0x0d, 0xf2, 0xe5, 0x5a, 0x28, 0x77, 0x4e,
+	0x27, 0xd3, 0x18, 0xfa, 0xc6, 0x32, 0xdb, 0xba, 0x50, 0x6e, 0xb7, 0x9d, 0xe8, 0x1c, 0xc0, 0x57,
+	0x61, 0x9e, 0x84, 0xb1, 0x49, 0x9c, 0xc6, 0xd9, 0x70, 0x31, 0xca, 0xf7, 0x2d, 0xe4, 0xfe, 0xc2,
+	0xe2, 0x40, 0xb3, 0xf8, 0x8e, 0xe0, 0xd2, 0x6f, 0x9f, 0xf7, 0xe5, 0xd1, 0x7b, 0x38, 0x65, 0x9c,
+	0x87, 0x36, 0x3a, 0xf4, 0xe4, 0x26, 0x0f, 0x55, 0xe6, 0xbb, 0x2a, 0xf3, 0xa5, 0xd5, 0xa2, 0xa9,
+	0xde, 0xd8, 0xa6, 0x45, 0xc7, 0x56, 0x68, 0x03, 0xfb, 0xa7, 0x72, 0xd2, 0x71, 0xa6, 0x0f, 0x70,
+	0x66, 0x90, 0xe9, 0x72, 0xed, 0x47, 0x73, 0x2c, 0x3f, 0x27, 0xce, 0xa1, 0x55, 0x9c, 0x59, 0xdc,
+	0x3a, 0x1c, 0x99, 0x3e, 0x23, 0xf4, 0x05, 0xce, 0x95, 0x96, 0x25, 0x1a, 0xf3, 0xaf, 0x10, 0xd7,
+	0x07, 0x3f, 0xf8, 0xfd, 0x6a, 0x19, 0x99, 0x93, 0x55, 0xdf, 0x63, 0x77, 0x3f, 0x01, 0x00, 0x00,
+	0xff, 0xff, 0xed, 0x7a, 0x7f, 0xf8, 0xa3, 0x02, 0x00, 0x00,
+}
+
+// Reference imports to suppress errors if they are not otherwise used.
+var _ context.Context
+var _ grpc.ClientConn
+
+// This is a compile-time assertion to ensure that this generated file
+// is compatible with the grpc package it is being compiled against.
+const _ = grpc.SupportPackageIsVersion4
+
+// OrderManagementClient is the client API for OrderManagement service.
+//
+// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
+type OrderManagementClient interface {
+	AddOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*wrappers.StringValue, error)
+	GetOrder(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Order, error)
+	SearchOrders(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (OrderManagement_SearchOrdersClient, error)
+	UpdateOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_UpdateOrdersClient, error)
+	ProcessOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_ProcessOrdersClient, error)
+}
+
+type orderManagementClient struct {
+	cc *grpc.ClientConn
+}
+
+func NewOrderManagementClient(cc *grpc.ClientConn) OrderManagementClient {
+	return &orderManagementClient{cc}
+}
+
+func (c *orderManagementClient) AddOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
+	out := new(wrappers.StringValue)
+	err := c.cc.Invoke(ctx, "/ecommerce.OrderManagement/addOrder", in, out, opts...)
+	if err != nil {
+		return nil, err
+	}
+	return out, nil
+}
+
+func (c *orderManagementClient) GetOrder(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Order, error) {
+	out := new(Order)
+	err := c.cc.Invoke(ctx, "/ecommerce.OrderManagement/getOrder", in, out, opts...)
+	if err != nil {
+		return nil, err
+	}
+	return out, nil
+}
+
+func (c *orderManagementClient) SearchOrders(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (OrderManagement_SearchOrdersClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_OrderManagement_serviceDesc.Streams[0], "/ecommerce.OrderManagement/searchOrders", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &orderManagementSearchOrdersClient{stream}
+	if err := x.ClientStream.SendMsg(in); err != nil {
+		return nil, err
+	}
+	if err := x.ClientStream.CloseSend(); err != nil {
+		return nil, err
+	}
+	return x, nil
+}
+
+type OrderManagement_SearchOrdersClient interface {
+	Recv() (*Order, error)
+	grpc.ClientStream
+}
+
+type orderManagementSearchOrdersClient struct {
+	grpc.ClientStream
+}
+
+func (x *orderManagementSearchOrdersClient) Recv() (*Order, error) {
+	m := new(Order)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+func (c *orderManagementClient) UpdateOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_UpdateOrdersClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_OrderManagement_serviceDesc.Streams[1], "/ecommerce.OrderManagement/updateOrders", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &orderManagementUpdateOrdersClient{stream}
+	return x, nil
+}
+
+type OrderManagement_UpdateOrdersClient interface {
+	Send(*Order) error
+	CloseAndRecv() (*wrappers.StringValue, error)
+	grpc.ClientStream
+}
+
+type orderManagementUpdateOrdersClient struct {
+	grpc.ClientStream
+}
+
+func (x *orderManagementUpdateOrdersClient) Send(m *Order) error {
+	return x.ClientStream.SendMsg(m)
+}
+
+func (x *orderManagementUpdateOrdersClient) CloseAndRecv() (*wrappers.StringValue, error) {
+	if err := x.ClientStream.CloseSend(); err != nil {
+		return nil, err
+	}
+	m := new(wrappers.StringValue)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+func (c *orderManagementClient) ProcessOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_ProcessOrdersClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_OrderManagement_serviceDesc.Streams[2], "/ecommerce.OrderManagement/processOrders", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &orderManagementProcessOrdersClient{stream}
+	return x, nil
+}
+
+type OrderManagement_ProcessOrdersClient interface {
+	Send(*wrappers.StringValue) error
+	Recv() (*CombinedShipment, error)
+	grpc.ClientStream
+}
+
+type orderManagementProcessOrdersClient struct {
+	grpc.ClientStream
+}
+
+func (x *orderManagementProcessOrdersClient) Send(m *wrappers.StringValue) error {
+	return x.ClientStream.SendMsg(m)
+}
+
+func (x *orderManagementProcessOrdersClient) Recv() (*CombinedShipment, error) {
+	m := new(CombinedShipment)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+// OrderManagementServer is the server API for OrderManagement service.
+type OrderManagementServer interface {
+	AddOrder(context.Context, *Order) (*wrappers.StringValue, error)
+	GetOrder(context.Context, *wrappers.StringValue) (*Order, error)
+	SearchOrders(*wrappers.StringValue, OrderManagement_SearchOrdersServer) error
+	UpdateOrders(OrderManagement_UpdateOrdersServer) error
+	ProcessOrders(OrderManagement_ProcessOrdersServer) error
+}
+
+// UnimplementedOrderManagementServer can be embedded to have forward compatible implementations.
+type UnimplementedOrderManagementServer struct {
+}
+
+func (*UnimplementedOrderManagementServer) AddOrder(ctx context.Context, req *Order) (*wrappers.StringValue, error) {
+	return nil, status.Errorf(codes.Unimplemented, "method AddOrder not implemented")
+}
+func (*UnimplementedOrderManagementServer) GetOrder(ctx context.Context, req *wrappers.StringValue) (*Order, error) {
+	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
+}
+func (*UnimplementedOrderManagementServer) SearchOrders(req *wrappers.StringValue, srv OrderManagement_SearchOrdersServer) error {
+	return status.Errorf(codes.Unimplemented, "method SearchOrders not implemented")
+}
+func (*UnimplementedOrderManagementServer) UpdateOrders(srv OrderManagement_UpdateOrdersServer) error {
+	return status.Errorf(codes.Unimplemented, "method UpdateOrders not implemented")
+}
+func (*UnimplementedOrderManagementServer) ProcessOrders(srv OrderManagement_ProcessOrdersServer) error {
+	return status.Errorf(codes.Unimplemented, "method ProcessOrders not implemented")
+}
+
+func RegisterOrderManagementServer(s *grpc.Server, srv OrderManagementServer) {
+	s.RegisterService(&_OrderManagement_serviceDesc, srv)
+}
+
+func _OrderManagement_AddOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(Order)
+	if err := dec(in); err != nil {
+		return nil, err
+	}
+	if interceptor == nil {
+		return srv.(OrderManagementServer).AddOrder(ctx, in)
+	}
+	info := &grpc.UnaryServerInfo{
+		Server:     srv,
+		FullMethod: "/ecommerce.OrderManagement/AddOrder",
+	}
+	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
+		return srv.(OrderManagementServer).AddOrder(ctx, req.(*Order))
+	}
+	return interceptor(ctx, in, info, handler)
+}
+
+func _OrderManagement_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(wrappers.StringValue)
+	if err := dec(in); err != nil {
+		return nil, err
+	}
+	if interceptor == nil {
+		return srv.(OrderManagementServer).GetOrder(ctx, in)
+	}
+	info := &grpc.UnaryServerInfo{
+		Server:     srv,
+		FullMethod: "/ecommerce.OrderManagement/GetOrder",
+	}
+	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
+		return srv.(OrderManagementServer).GetOrder(ctx, req.(*wrappers.StringValue))
+	}
+	return interceptor(ctx, in, info, handler)
+}
+
+func _OrderManagement_SearchOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
+	m := new(wrappers.StringValue)
+	if err := stream.RecvMsg(m); err != nil {
+		return err
+	}
+	return srv.(OrderManagementServer).SearchOrders(m, &orderManagementSearchOrdersServer{stream})
+}
+
+type OrderManagement_SearchOrdersServer interface {
+	Send(*Order) error
+	grpc.ServerStream
+}
+
+type orderManagementSearchOrdersServer struct {
+	grpc.ServerStream
+}
+
+func (x *orderManagementSearchOrdersServer) Send(m *Order) error {
+	return x.ServerStream.SendMsg(m)
+}
+
+func _OrderManagement_UpdateOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
+	return srv.(OrderManagementServer).UpdateOrders(&orderManagementUpdateOrdersServer{stream})
+}
+
+type OrderManagement_UpdateOrdersServer interface {
+	SendAndClose(*wrappers.StringValue) error
+	Recv() (*Order, error)
+	grpc.ServerStream
+}
+
+type orderManagementUpdateOrdersServer struct {
+	grpc.ServerStream
+}
+
+func (x *orderManagementUpdateOrdersServer) SendAndClose(m *wrappers.StringValue) error {
+	return x.ServerStream.SendMsg(m)
+}
+
+func (x *orderManagementUpdateOrdersServer) Recv() (*Order, error) {
+	m := new(Order)
+	if err := x.ServerStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+func _OrderManagement_ProcessOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
+	return srv.(OrderManagementServer).ProcessOrders(&orderManagementProcessOrdersServer{stream})
+}
+
+type OrderManagement_ProcessOrdersServer interface {
+	Send(*CombinedShipment) error
+	Recv() (*wrappers.StringValue, error)
+	grpc.ServerStream
+}
+
+type orderManagementProcessOrdersServer struct {
+	grpc.ServerStream
+}
+
+func (x *orderManagementProcessOrdersServer) Send(m *CombinedShipment) error {
+	return x.ServerStream.SendMsg(m)
+}
+
+func (x *orderManagementProcessOrdersServer) Recv() (*wrappers.StringValue, error) {
+	m := new(wrappers.StringValue)
+	if err := x.ServerStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+var _OrderManagement_serviceDesc = grpc.ServiceDesc{
+	ServiceName: "ecommerce.OrderManagement",
+	HandlerType: (*OrderManagementServer)(nil),
+	Methods: []grpc.MethodDesc{
+		{
+			MethodName: "addOrder",
+			Handler:    _OrderManagement_AddOrder_Handler,
+		},
+		{
+			MethodName: "getOrder",
+			Handler:    _OrderManagement_GetOrder_Handler,
+		},
+	},
+	Streams: []grpc.StreamDesc{
+		{
+			StreamName:    "searchOrders",
+			Handler:       _OrderManagement_SearchOrders_Handler,
+			ServerStreams: true,
+		},
+		{
+			StreamName:    "updateOrders",
+			Handler:       _OrderManagement_UpdateOrders_Handler,
+			ClientStreams: true,
+		},
+		{
+			StreamName:    "processOrders",
+			Handler:       _OrderManagement_ProcessOrders_Handler,
+			ServerStreams: true,
+			ClientStreams: true,
+		},
+	},
+	Metadata: "order_management.proto",
+}
diff --git a/ch05/deadlines/order-service/go/server/ecommerce/order_management.proto b/ch05/deadlines/order-service/go/server/ecommerce/order_management.proto
new file mode 100644
index 0000000..f1aa315
--- /dev/null
+++ b/ch05/deadlines/order-service/go/server/ecommerce/order_management.proto
@@ -0,0 +1,27 @@
+syntax = "proto3";
+
+import "google/protobuf/wrappers.proto";
+
+package ecommerce;
+
+service OrderManagement {
+    rpc addOrder(Order) returns (google.protobuf.StringValue);
+    rpc getOrder(google.protobuf.StringValue) returns (Order);
+    rpc searchOrders(google.protobuf.StringValue) returns (stream Order);
+    rpc updateOrders(stream Order) returns (google.protobuf.StringValue);
+    rpc processOrders(stream google.protobuf.StringValue) returns (stream CombinedShipment);
+}
+
+message Order {
+    string id = 1;
+    repeated string items = 2;
+    string description = 3;
+    float price = 4;
+    string destination = 5;
+}
+
+message CombinedShipment {
+    string id = 1;
+    string status = 2;
+    repeated Order ordersList = 3;
+}
diff --git a/ch05/deadlines/order-service/go/server/go.mod b/ch05/deadlines/order-service/go/server/go.mod
new file mode 100644
index 0000000..7a65329
--- /dev/null
+++ b/ch05/deadlines/order-service/go/server/go.mod
@@ -0,0 +1,9 @@
+module ordermgt/deadline/service
+
+go 1.12
+
+require (
+	github.com/golang/protobuf v1.4.1
+	google.golang.org/grpc v1.27.0
+	google.golang.org/protobuf v1.25.0
+)
diff --git a/ch05/deadlines/order-service/go/server/main.go b/ch05/deadlines/order-service/go/server/main.go
index 92ec2ec..89ebef1 100644
--- a/ch05/deadlines/order-service/go/server/main.go
+++ b/ch05/deadlines/order-service/go/server/main.go
@@ -2,16 +2,17 @@ package main
 
 import (
 	"context"
-	"github.com/golang/protobuf/ptypes/wrappers"
-	wrapper "github.com/golang/protobuf/ptypes/wrappers"
-	pb "github.com/grpc-up-and-running/samples/ch05/interceptors/order-service/go/order-service-gen"
-	"google.golang.org/grpc"
-	"google.golang.org/grpc/reflection"
 	"io"
 	"log"
 	"net"
 	"strings"
 	"time"
+
+	"github.com/golang/protobuf/ptypes/wrappers"
+	wrapper "github.com/golang/protobuf/ptypes/wrappers"
+	"google.golang.org/grpc"
+	"google.golang.org/grpc/reflection"
+	pb "ordermgt/deadline/service/ecommerce"
 )
 
 const (
@@ -34,6 +35,7 @@ func (s *server) AddOrder(ctx context.Context, orderReq *pb.Order) (*wrappers.St
 
 	time.Sleep(time.Duration(sleepDuration) * time.Second)
 
+	log.Printf("context.DeadlineExceeded Type is %T | ctx.Err() is %T", context.DeadlineExceeded, ctx.Err())
 	if ctx.Err() == context.DeadlineExceeded {
 		log.Printf("RPC has reached deadline exceeded state : %s", ctx.Err())
 		return nil, ctx.Err()
diff --git a/ch05/error-handling/order-service/go/client/go.mod b/ch05/error-handling/order-service/go/client/go.mod
new file mode 100644
index 0000000..0eecd3c
--- /dev/null
+++ b/ch05/error-handling/order-service/go/client/go.mod
@@ -0,0 +1,10 @@
+module client-error-handling
+
+go 1.15
+
+require (
+	github.com/golang/protobuf v1.4.2
+	github.com/grpc-up-and-running/samples v0.0.0-20200901064603-1f9de1e3efd9
+	google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55
+	google.golang.org/grpc v1.32.0
+)
diff --git a/ch05/error-handling/order-service/go/server/go.mod b/ch05/error-handling/order-service/go/server/go.mod
new file mode 100644
index 0000000..5823b93
--- /dev/null
+++ b/ch05/error-handling/order-service/go/server/go.mod
@@ -0,0 +1,10 @@
+module server-error-handling
+
+go 1.15
+
+require (
+	github.com/golang/protobuf v1.4.2
+	github.com/grpc-up-and-running/samples v0.0.0-20200901064603-1f9de1e3efd9
+	google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55
+	google.golang.org/grpc v1.32.0
+)
diff --git a/ch05/interceptors/order-service/go/client/ecommerce/google/protobuf/wrappers.proto b/ch05/interceptors/order-service/go/client/ecommerce/google/protobuf/wrappers.proto
new file mode 100644
index 0000000..0194763
--- /dev/null
+++ b/ch05/interceptors/order-service/go/client/ecommerce/google/protobuf/wrappers.proto
@@ -0,0 +1,118 @@
+// Protocol Buffers - Google's data interchange format
+// Copyright 2008 Google Inc.  All rights reserved.
+// https://developers.google.com/protocol-buffers/
+//
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions are
+// met:
+//
+//     * Redistributions of source code must retain the above copyright
+// notice, this list of conditions and the following disclaimer.
+//     * Redistributions in binary form must reproduce the above
+// copyright notice, this list of conditions and the following disclaimer
+// in the documentation and/or other materials provided with the
+// distribution.
+//     * Neither the name of Google Inc. nor the names of its
+// contributors may be used to endorse or promote products derived from
+// this software without specific prior written permission.
+//
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+// Wrappers for primitive (non-message) types. These types are useful
+// for embedding primitives in the `google.protobuf.Any` type and for places
+// where we need to distinguish between the absence of a primitive
+// typed field and its default value.
+
+syntax = "proto3";
+
+package google.protobuf;
+
+option csharp_namespace = "Google.Protobuf.WellKnownTypes";
+option cc_enable_arenas = true;
+option go_package = "github.com/golang/protobuf/ptypes/wrappers";
+option java_package = "com.google.protobuf";
+option java_outer_classname = "WrappersProto";
+option java_multiple_files = true;
+option objc_class_prefix = "GPB";
+
+// Wrapper message for `double`.
+//
+// The JSON representation for `DoubleValue` is JSON number.
+message DoubleValue {
+  // The double value.
+  double value = 1;
+}
+
+// Wrapper message for `float`.
+//
+// The JSON representation for `FloatValue` is JSON number.
+message FloatValue {
+  // The float value.
+  float value = 1;
+}
+
+// Wrapper message for `int64`.
+//
+// The JSON representation for `Int64Value` is JSON string.
+message Int64Value {
+  // The int64 value.
+  int64 value = 1;
+}
+
+// Wrapper message for `uint64`.
+//
+// The JSON representation for `UInt64Value` is JSON string.
+message UInt64Value {
+  // The uint64 value.
+  uint64 value = 1;
+}
+
+// Wrapper message for `int32`.
+//
+// The JSON representation for `Int32Value` is JSON number.
+message Int32Value {
+  // The int32 value.
+  int32 value = 1;
+}
+
+// Wrapper message for `uint32`.
+//
+// The JSON representation for `UInt32Value` is JSON number.
+message UInt32Value {
+  // The uint32 value.
+  uint32 value = 1;
+}
+
+// Wrapper message for `bool`.
+//
+// The JSON representation for `BoolValue` is JSON `true` and `false`.
+message BoolValue {
+  // The bool value.
+  bool value = 1;
+}
+
+// Wrapper message for `string`.
+//
+// The JSON representation for `StringValue` is JSON string.
+message StringValue {
+  // The string value.
+  string value = 1;
+}
+
+// Wrapper message for `bytes`.
+//
+// The JSON representation for `BytesValue` is JSON string.
+message BytesValue {
+  // The bytes value.
+  bytes value = 1;
+}
diff --git a/ch05/interceptors/order-service/go/client/ecommerce/order_management.proto b/ch05/interceptors/order-service/go/client/ecommerce/order_management.proto
new file mode 100644
index 0000000..f1aa315
--- /dev/null
+++ b/ch05/interceptors/order-service/go/client/ecommerce/order_management.proto
@@ -0,0 +1,27 @@
+syntax = "proto3";
+
+import "google/protobuf/wrappers.proto";
+
+package ecommerce;
+
+service OrderManagement {
+    rpc addOrder(Order) returns (google.protobuf.StringValue);
+    rpc getOrder(google.protobuf.StringValue) returns (Order);
+    rpc searchOrders(google.protobuf.StringValue) returns (stream Order);
+    rpc updateOrders(stream Order) returns (google.protobuf.StringValue);
+    rpc processOrders(stream google.protobuf.StringValue) returns (stream CombinedShipment);
+}
+
+message Order {
+    string id = 1;
+    repeated string items = 2;
+    string description = 3;
+    float price = 4;
+    string destination = 5;
+}
+
+message CombinedShipment {
+    string id = 1;
+    string status = 2;
+    repeated Order ordersList = 3;
+}
diff --git a/ch05/interceptors/order-service/go/client/go.mod b/ch05/interceptors/order-service/go/client/go.mod
new file mode 100644
index 0000000..ba46435
--- /dev/null
+++ b/ch05/interceptors/order-service/go/client/go.mod
@@ -0,0 +1,9 @@
+module ordermgt/interceptor/client
+
+go 1.12
+
+require (
+	github.com/golang/protobuf v1.4.1
+	google.golang.org/grpc v1.27.0
+	google.golang.org/protobuf v1.25.0
+)
diff --git a/ch05/interceptors/order-service/go/client/main.go b/ch05/interceptors/order-service/go/client/main.go
index e2b7235..bb654a5 100644
--- a/ch05/interceptors/order-service/go/client/main.go
+++ b/ch05/interceptors/order-service/go/client/main.go
@@ -2,12 +2,12 @@ package main
 
 import (
 	"context"
-	pb "github.com/grpc-up-and-running/samples/ch05/interceptors/order-service/go/order-service-gen"
-	wrapper "github.com/golang/protobuf/ptypes/wrappers"
-	"google.golang.org/grpc"
 	"io"
 	"log"
 	"time"
+
+	wrapper "github.com/golang/protobuf/ptypes/wrappers"
+	"google.golang.org/grpc"
 )
 
 const (
diff --git a/ch05/interceptors/order-service/go/server/ecommerce/google/protobuf/wrappers.proto b/ch05/interceptors/order-service/go/server/ecommerce/google/protobuf/wrappers.proto
new file mode 100644
index 0000000..0194763
--- /dev/null
+++ b/ch05/interceptors/order-service/go/server/ecommerce/google/protobuf/wrappers.proto
@@ -0,0 +1,118 @@
+// Protocol Buffers - Google's data interchange format
+// Copyright 2008 Google Inc.  All rights reserved.
+// https://developers.google.com/protocol-buffers/
+//
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions are
+// met:
+//
+//     * Redistributions of source code must retain the above copyright
+// notice, this list of conditions and the following disclaimer.
+//     * Redistributions in binary form must reproduce the above
+// copyright notice, this list of conditions and the following disclaimer
+// in the documentation and/or other materials provided with the
+// distribution.
+//     * Neither the name of Google Inc. nor the names of its
+// contributors may be used to endorse or promote products derived from
+// this software without specific prior written permission.
+//
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+// Wrappers for primitive (non-message) types. These types are useful
+// for embedding primitives in the `google.protobuf.Any` type and for places
+// where we need to distinguish between the absence of a primitive
+// typed field and its default value.
+
+syntax = "proto3";
+
+package google.protobuf;
+
+option csharp_namespace = "Google.Protobuf.WellKnownTypes";
+option cc_enable_arenas = true;
+option go_package = "github.com/golang/protobuf/ptypes/wrappers";
+option java_package = "com.google.protobuf";
+option java_outer_classname = "WrappersProto";
+option java_multiple_files = true;
+option objc_class_prefix = "GPB";
+
+// Wrapper message for `double`.
+//
+// The JSON representation for `DoubleValue` is JSON number.
+message DoubleValue {
+  // The double value.
+  double value = 1;
+}
+
+// Wrapper message for `float`.
+//
+// The JSON representation for `FloatValue` is JSON number.
+message FloatValue {
+  // The float value.
+  float value = 1;
+}
+
+// Wrapper message for `int64`.
+//
+// The JSON representation for `Int64Value` is JSON string.
+message Int64Value {
+  // The int64 value.
+  int64 value = 1;
+}
+
+// Wrapper message for `uint64`.
+//
+// The JSON representation for `UInt64Value` is JSON string.
+message UInt64Value {
+  // The uint64 value.
+  uint64 value = 1;
+}
+
+// Wrapper message for `int32`.
+//
+// The JSON representation for `Int32Value` is JSON number.
+message Int32Value {
+  // The int32 value.
+  int32 value = 1;
+}
+
+// Wrapper message for `uint32`.
+//
+// The JSON representation for `UInt32Value` is JSON number.
+message UInt32Value {
+  // The uint32 value.
+  uint32 value = 1;
+}
+
+// Wrapper message for `bool`.
+//
+// The JSON representation for `BoolValue` is JSON `true` and `false`.
+message BoolValue {
+  // The bool value.
+  bool value = 1;
+}
+
+// Wrapper message for `string`.
+//
+// The JSON representation for `StringValue` is JSON string.
+message StringValue {
+  // The string value.
+  string value = 1;
+}
+
+// Wrapper message for `bytes`.
+//
+// The JSON representation for `BytesValue` is JSON string.
+message BytesValue {
+  // The bytes value.
+  bytes value = 1;
+}
diff --git a/ch05/interceptors/order-service/go/server/ecommerce/order_management.pb.go b/ch05/interceptors/order-service/go/server/ecommerce/order_management.pb.go
new file mode 100644
index 0000000..e2434d1
--- /dev/null
+++ b/ch05/interceptors/order-service/go/server/ecommerce/order_management.pb.go
@@ -0,0 +1,502 @@
+// Code generated by protoc-gen-go. DO NOT EDIT.
+// source: order_management.proto
+
+package ecommerce
+
+import (
+	context "context"
+	fmt "fmt"
+	proto "github.com/golang/protobuf/proto"
+	wrappers "github.com/golang/protobuf/ptypes/wrappers"
+	grpc "google.golang.org/grpc"
+	codes "google.golang.org/grpc/codes"
+	status "google.golang.org/grpc/status"
+	math "math"
+)
+
+// Reference imports to suppress errors if they are not otherwise used.
+var _ = proto.Marshal
+var _ = fmt.Errorf
+var _ = math.Inf
+
+// This is a compile-time assertion to ensure that this generated file
+// is compatible with the proto package it is being compiled against.
+// A compilation error at this line likely means your copy of the
+// proto package needs to be updated.
+const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
+
+type Order struct {
+	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Items                []string `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
+	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
+	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
+	Destination          string   `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
+	XXX_NoUnkeyedLiteral struct{} `json:"-"`
+	XXX_unrecognized     []byte   `json:"-"`
+	XXX_sizecache        int32    `json:"-"`
+}
+
+func (m *Order) Reset()         { *m = Order{} }
+func (m *Order) String() string { return proto.CompactTextString(m) }
+func (*Order) ProtoMessage()    {}
+func (*Order) Descriptor() ([]byte, []int) {
+	return fileDescriptor_6653354279552460, []int{0}
+}
+
+func (m *Order) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_Order.Unmarshal(m, b)
+}
+func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
+}
+func (m *Order) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_Order.Merge(m, src)
+}
+func (m *Order) XXX_Size() int {
+	return xxx_messageInfo_Order.Size(m)
+}
+func (m *Order) XXX_DiscardUnknown() {
+	xxx_messageInfo_Order.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_Order proto.InternalMessageInfo
+
+func (m *Order) GetId() string {
+	if m != nil {
+		return m.Id
+	}
+	return ""
+}
+
+func (m *Order) GetItems() []string {
+	if m != nil {
+		return m.Items
+	}
+	return nil
+}
+
+func (m *Order) GetDescription() string {
+	if m != nil {
+		return m.Description
+	}
+	return ""
+}
+
+func (m *Order) GetPrice() float32 {
+	if m != nil {
+		return m.Price
+	}
+	return 0
+}
+
+func (m *Order) GetDestination() string {
+	if m != nil {
+		return m.Destination
+	}
+	return ""
+}
+
+type CombinedShipment struct {
+	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
+	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
+	OrdersList           []*Order `protobuf:"bytes,3,rep,name=ordersList,proto3" json:"ordersList,omitempty"`
+	XXX_NoUnkeyedLiteral struct{} `json:"-"`
+	XXX_unrecognized     []byte   `json:"-"`
+	XXX_sizecache        int32    `json:"-"`
+}
+
+func (m *CombinedShipment) Reset()         { *m = CombinedShipment{} }
+func (m *CombinedShipment) String() string { return proto.CompactTextString(m) }
+func (*CombinedShipment) ProtoMessage()    {}
+func (*CombinedShipment) Descriptor() ([]byte, []int) {
+	return fileDescriptor_6653354279552460, []int{1}
+}
+
+func (m *CombinedShipment) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_CombinedShipment.Unmarshal(m, b)
+}
+func (m *CombinedShipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_CombinedShipment.Marshal(b, m, deterministic)
+}
+func (m *CombinedShipment) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_CombinedShipment.Merge(m, src)
+}
+func (m *CombinedShipment) XXX_Size() int {
+	return xxx_messageInfo_CombinedShipment.Size(m)
+}
+func (m *CombinedShipment) XXX_DiscardUnknown() {
+	xxx_messageInfo_CombinedShipment.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_CombinedShipment proto.InternalMessageInfo
+
+func (m *CombinedShipment) GetId() string {
+	if m != nil {
+		return m.Id
+	}
+	return ""
+}
+
+func (m *CombinedShipment) GetStatus() string {
+	if m != nil {
+		return m.Status
+	}
+	return ""
+}
+
+func (m *CombinedShipment) GetOrdersList() []*Order {
+	if m != nil {
+		return m.OrdersList
+	}
+	return nil
+}
+
+func init() {
+	proto.RegisterType((*Order)(nil), "ecommerce.Order")
+	proto.RegisterType((*CombinedShipment)(nil), "ecommerce.CombinedShipment")
+}
+
+func init() { proto.RegisterFile("order_management.proto", fileDescriptor_6653354279552460) }
+
+var fileDescriptor_6653354279552460 = []byte{
+	// 330 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x5f, 0x4b, 0xc3, 0x30,
+	0x14, 0xc5, 0x49, 0xeb, 0x86, 0xbb, 0xf3, 0xcf, 0x08, 0x32, 0xca, 0x14, 0x29, 0x7b, 0xea, 0x53,
+	0x37, 0xe6, 0x9b, 0x4f, 0x82, 0xaf, 0xfe, 0x81, 0x0e, 0x7c, 0x95, 0xac, 0xb9, 0x76, 0x81, 0xb5,
+	0x09, 0x49, 0x8a, 0x1f, 0xc1, 0x4f, 0xe9, 0x77, 0x91, 0x24, 0xdb, 0x18, 0x16, 0xc4, 0x3d, 0xde,
+	0xdb, 0xf3, 0x3b, 0x3d, 0xf7, 0x04, 0xc6, 0x52, 0x73, 0xd4, 0xef, 0x35, 0x6b, 0x58, 0x85, 0x35,
+	0x36, 0x36, 0x57, 0x5a, 0x5a, 0x49, 0x07, 0x58, 0xca, 0xba, 0x46, 0x5d, 0xe2, 0xe4, 0xb6, 0x92,
+	0xb2, 0xda, 0xe0, 0xcc, 0x7f, 0x58, 0xb5, 0x1f, 0xb3, 0x4f, 0xcd, 0x94, 0x42, 0x6d, 0x82, 0x74,
+	0xfa, 0x45, 0xa0, 0xf7, 0xea, 0x5c, 0xe8, 0x05, 0x44, 0x82, 0x27, 0x24, 0x25, 0xd9, 0xa0, 0x88,
+	0x04, 0xa7, 0x57, 0xd0, 0x13, 0x16, 0x6b, 0x93, 0x44, 0x69, 0x9c, 0x0d, 0x8a, 0x30, 0xd0, 0x14,
+	0x86, 0x1c, 0x4d, 0xa9, 0x85, 0xb2, 0x42, 0x36, 0x49, 0xec, 0xe5, 0x87, 0x2b, 0xc7, 0x29, 0x2d,
+	0x4a, 0x4c, 0x4e, 0x52, 0x92, 0x45, 0x45, 0x18, 0xb6, 0x9c, 0x15, 0x0d, 0xf3, 0x5c, 0x6f, 0xcf,
+	0xed, 0x56, 0xd3, 0x0d, 0x8c, 0x1e, 0x65, 0xbd, 0x12, 0x0d, 0xf2, 0xe5, 0x5a, 0x28, 0x77, 0x4e,
+	0x27, 0xd3, 0x18, 0xfa, 0xc6, 0x32, 0xdb, 0xba, 0x50, 0x6e, 0xb7, 0x9d, 0xe8, 0x1c, 0xc0, 0x57,
+	0x61, 0x9e, 0x84, 0xb1, 0x49, 0x9c, 0xc6, 0xd9, 0x70, 0x31, 0xca, 0xf7, 0x2d, 0xe4, 0xfe, 0xc2,
+	0xe2, 0x40, 0xb3, 0xf8, 0x8e, 0xe0, 0xd2, 0x6f, 0x9f, 0xf7, 0xe5, 0xd1, 0x7b, 0x38, 0x65, 0x9c,
+	0x87, 0x36, 0x3a, 0xf4, 0xe4, 0x26, 0x0f, 0x55, 0xe6, 0xbb, 0x2a, 0xf3, 0xa5, 0xd5, 0xa2, 0xa9,
+	0xde, 0xd8, 0xa6, 0x45, 0xc7, 0x56, 0x68, 0x03, 0xfb, 0xa7, 0x72, 0xd2, 0x71, 0xa6, 0x0f, 0x70,
+	0x66, 0x90, 0xe9, 0x72, 0xed, 0x47, 0x73, 0x2c, 0x3f, 0x27, 0xce, 0xa1, 0x55, 0x9c, 0x59, 0xdc,
+	0x3a, 0x1c, 0x99, 0x3e, 0x23, 0xf4, 0x05, 0xce, 0x95, 0x96, 0x25, 0x1a, 0xf3, 0xaf, 0x10, 0xd7,
+	0x07, 0x3f, 0xf8, 0xfd, 0x6a, 0x19, 0x99, 0x93, 0x55, 0xdf, 0x63, 0x77, 0x3f, 0x01, 0x00, 0x00,
+	0xff, 0xff, 0xed, 0x7a, 0x7f, 0xf8, 0xa3, 0x02, 0x00, 0x00,
+}
+
+// Reference imports to suppress errors if they are not otherwise used.
+var _ context.Context
+var _ grpc.ClientConn
+
+// This is a compile-time assertion to ensure that this generated file
+// is compatible with the grpc package it is being compiled against.
+const _ = grpc.SupportPackageIsVersion4
+
+// OrderManagementClient is the client API for OrderManagement service.
+//
+// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
+type OrderManagementClient interface {
+	AddOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*wrappers.StringValue, error)
+	GetOrder(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Order, error)
+	SearchOrders(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (OrderManagement_SearchOrdersClient, error)
+	UpdateOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_UpdateOrdersClient, error)
+	ProcessOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_ProcessOrdersClient, error)
+}
+
+type orderManagementClient struct {
+	cc *grpc.ClientConn
+}
+
+func NewOrderManagementClient(cc *grpc.ClientConn) OrderManagementClient {
+	return &orderManagementClient{cc}
+}
+
+func (c *orderManagementClient) AddOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
+	out := new(wrappers.StringValue)
+	err := c.cc.Invoke(ctx, "/ecommerce.OrderManagement/addOrder", in, out, opts...)
+	if err != nil {
+		return nil, err
+	}
+	return out, nil
+}
+
+func (c *orderManagementClient) GetOrder(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*Order, error) {
+	out := new(Order)
+	err := c.cc.Invoke(ctx, "/ecommerce.OrderManagement/getOrder", in, out, opts...)
+	if err != nil {
+		return nil, err
+	}
+	return out, nil
+}
+
+func (c *orderManagementClient) SearchOrders(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (OrderManagement_SearchOrdersClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_OrderManagement_serviceDesc.Streams[0], "/ecommerce.OrderManagement/searchOrders", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &orderManagementSearchOrdersClient{stream}
+	if err := x.ClientStream.SendMsg(in); err != nil {
+		return nil, err
+	}
+	if err := x.ClientStream.CloseSend(); err != nil {
+		return nil, err
+	}
+	return x, nil
+}
+
+type OrderManagement_SearchOrdersClient interface {
+	Recv() (*Order, error)
+	grpc.ClientStream
+}
+
+type orderManagementSearchOrdersClient struct {
+	grpc.ClientStream
+}
+
+func (x *orderManagementSearchOrdersClient) Recv() (*Order, error) {
+	m := new(Order)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+func (c *orderManagementClient) UpdateOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_UpdateOrdersClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_OrderManagement_serviceDesc.Streams[1], "/ecommerce.OrderManagement/updateOrders", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &orderManagementUpdateOrdersClient{stream}
+	return x, nil
+}
+
+type OrderManagement_UpdateOrdersClient interface {
+	Send(*Order) error
+	CloseAndRecv() (*wrappers.StringValue, error)
+	grpc.ClientStream
+}
+
+type orderManagementUpdateOrdersClient struct {
+	grpc.ClientStream
+}
+
+func (x *orderManagementUpdateOrdersClient) Send(m *Order) error {
+	return x.ClientStream.SendMsg(m)
+}
+
+func (x *orderManagementUpdateOrdersClient) CloseAndRecv() (*wrappers.StringValue, error) {
+	if err := x.ClientStream.CloseSend(); err != nil {
+		return nil, err
+	}
+	m := new(wrappers.StringValue)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+func (c *orderManagementClient) ProcessOrders(ctx context.Context, opts ...grpc.CallOption) (OrderManagement_ProcessOrdersClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_OrderManagement_serviceDesc.Streams[2], "/ecommerce.OrderManagement/processOrders", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &orderManagementProcessOrdersClient{stream}
+	return x, nil
+}
+
+type OrderManagement_ProcessOrdersClient interface {
+	Send(*wrappers.StringValue) error
+	Recv() (*CombinedShipment, error)
+	grpc.ClientStream
+}
+
+type orderManagementProcessOrdersClient struct {
+	grpc.ClientStream
+}
+
+func (x *orderManagementProcessOrdersClient) Send(m *wrappers.StringValue) error {
+	return x.ClientStream.SendMsg(m)
+}
+
+func (x *orderManagementProcessOrdersClient) Recv() (*CombinedShipment, error) {
+	m := new(CombinedShipment)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+// OrderManagementServer is the server API for OrderManagement service.
+type OrderManagementServer interface {
+	AddOrder(context.Context, *Order) (*wrappers.StringValue, error)
+	GetOrder(context.Context, *wrappers.StringValue) (*Order, error)
+	SearchOrders(*wrappers.StringValue, OrderManagement_SearchOrdersServer) error
+	UpdateOrders(OrderManagement_UpdateOrdersServer) error
+	ProcessOrders(OrderManagement_ProcessOrdersServer) error
+}
+
+// UnimplementedOrderManagementServer can be embedded to have forward compatible implementations.
+type UnimplementedOrderManagementServer struct {
+}
+
+func (*UnimplementedOrderManagementServer) AddOrder(ctx context.Context, req *Order) (*wrappers.StringValue, error) {
+	return nil, status.Errorf(codes.Unimplemented, "method AddOrder not implemented")
+}
+func (*UnimplementedOrderManagementServer) GetOrder(ctx context.Context, req *wrappers.StringValue) (*Order, error) {
+	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
+}
+func (*UnimplementedOrderManagementServer) SearchOrders(req *wrappers.StringValue, srv OrderManagement_SearchOrdersServer) error {
+	return status.Errorf(codes.Unimplemented, "method SearchOrders not implemented")
+}
+func (*UnimplementedOrderManagementServer) UpdateOrders(srv OrderManagement_UpdateOrdersServer) error {
+	return status.Errorf(codes.Unimplemented, "method UpdateOrders not implemented")
+}
+func (*UnimplementedOrderManagementServer) ProcessOrders(srv OrderManagement_ProcessOrdersServer) error {
+	return status.Errorf(codes.Unimplemented, "method ProcessOrders not implemented")
+}
+
+func RegisterOrderManagementServer(s *grpc.Server, srv OrderManagementServer) {
+	s.RegisterService(&_OrderManagement_serviceDesc, srv)
+}
+
+func _OrderManagement_AddOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(Order)
+	if err := dec(in); err != nil {
+		return nil, err
+	}
+	if interceptor == nil {
+		return srv.(OrderManagementServer).AddOrder(ctx, in)
+	}
+	info := &grpc.UnaryServerInfo{
+		Server:     srv,
+		FullMethod: "/ecommerce.OrderManagement/AddOrder",
+	}
+	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
+		return srv.(OrderManagementServer).AddOrder(ctx, req.(*Order))
+	}
+	return interceptor(ctx, in, info, handler)
+}
+
+func _OrderManagement_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(wrappers.StringValue)
+	if err := dec(in); err != nil {
+		return nil, err
+	}
+	if interceptor == nil {
+		return srv.(OrderManagementServer).GetOrder(ctx, in)
+	}
+	info := &grpc.UnaryServerInfo{
+		Server:     srv,
+		FullMethod: "/ecommerce.OrderManagement/GetOrder",
+	}
+	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
+		return srv.(OrderManagementServer).GetOrder(ctx, req.(*wrappers.StringValue))
+	}
+	return interceptor(ctx, in, info, handler)
+}
+
+func _OrderManagement_SearchOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
+	m := new(wrappers.StringValue)
+	if err := stream.RecvMsg(m); err != nil {
+		return err
+	}
+	return srv.(OrderManagementServer).SearchOrders(m, &orderManagementSearchOrdersServer{stream})
+}
+
+type OrderManagement_SearchOrdersServer interface {
+	Send(*Order) error
+	grpc.ServerStream
+}
+
+type orderManagementSearchOrdersServer struct {
+	grpc.ServerStream
+}
+
+func (x *orderManagementSearchOrdersServer) Send(m *Order) error {
+	return x.ServerStream.SendMsg(m)
+}
+
+func _OrderManagement_UpdateOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
+	return srv.(OrderManagementServer).UpdateOrders(&orderManagementUpdateOrdersServer{stream})
+}
+
+type OrderManagement_UpdateOrdersServer interface {
+	SendAndClose(*wrappers.StringValue) error
+	Recv() (*Order, error)
+	grpc.ServerStream
+}
+
+type orderManagementUpdateOrdersServer struct {
+	grpc.ServerStream
+}
+
+func (x *orderManagementUpdateOrdersServer) SendAndClose(m *wrappers.StringValue) error {
+	return x.ServerStream.SendMsg(m)
+}
+
+func (x *orderManagementUpdateOrdersServer) Recv() (*Order, error) {
+	m := new(Order)
+	if err := x.ServerStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+func _OrderManagement_ProcessOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
+	return srv.(OrderManagementServer).ProcessOrders(&orderManagementProcessOrdersServer{stream})
+}
+
+type OrderManagement_ProcessOrdersServer interface {
+	Send(*CombinedShipment) error
+	Recv() (*wrappers.StringValue, error)
+	grpc.ServerStream
+}
+
+type orderManagementProcessOrdersServer struct {
+	grpc.ServerStream
+}
+
+func (x *orderManagementProcessOrdersServer) Send(m *CombinedShipment) error {
+	return x.ServerStream.SendMsg(m)
+}
+
+func (x *orderManagementProcessOrdersServer) Recv() (*wrappers.StringValue, error) {
+	m := new(wrappers.StringValue)
+	if err := x.ServerStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
+var _OrderManagement_serviceDesc = grpc.ServiceDesc{
+	ServiceName: "ecommerce.OrderManagement",
+	HandlerType: (*OrderManagementServer)(nil),
+	Methods: []grpc.MethodDesc{
+		{
+			MethodName: "addOrder",
+			Handler:    _OrderManagement_AddOrder_Handler,
+		},
+		{
+			MethodName: "getOrder",
+			Handler:    _OrderManagement_GetOrder_Handler,
+		},
+	},
+	Streams: []grpc.StreamDesc{
+		{
+			StreamName:    "searchOrders",
+			Handler:       _OrderManagement_SearchOrders_Handler,
+			ServerStreams: true,
+		},
+		{
+			StreamName:    "updateOrders",
+			Handler:       _OrderManagement_UpdateOrders_Handler,
+			ClientStreams: true,
+		},
+		{
+			StreamName:    "processOrders",
+			Handler:       _OrderManagement_ProcessOrders_Handler,
+			ServerStreams: true,
+			ClientStreams: true,
+		},
+	},
+	Metadata: "order_management.proto",
+}
diff --git a/ch05/interceptors/order-service/go/server/ecommerce/order_management.proto b/ch05/interceptors/order-service/go/server/ecommerce/order_management.proto
new file mode 100644
index 0000000..f1aa315
--- /dev/null
+++ b/ch05/interceptors/order-service/go/server/ecommerce/order_management.proto
@@ -0,0 +1,27 @@
+syntax = "proto3";
+
+import "google/protobuf/wrappers.proto";
+
+package ecommerce;
+
+service OrderManagement {
+    rpc addOrder(Order) returns (google.protobuf.StringValue);
+    rpc getOrder(google.protobuf.StringValue) returns (Order);
+    rpc searchOrders(google.protobuf.StringValue) returns (stream Order);
+    rpc updateOrders(stream Order) returns (google.protobuf.StringValue);
+    rpc processOrders(stream google.protobuf.StringValue) returns (stream CombinedShipment);
+}
+
+message Order {
+    string id = 1;
+    repeated string items = 2;
+    string description = 3;
+    float price = 4;
+    string destination = 5;
+}
+
+message CombinedShipment {
+    string id = 1;
+    string status = 2;
+    repeated Order ordersList = 3;
+}
diff --git a/ch05/interceptors/order-service/go/server/go.mod b/ch05/interceptors/order-service/go/server/go.mod
new file mode 100644
index 0000000..e4eae62
--- /dev/null
+++ b/ch05/interceptors/order-service/go/server/go.mod
@@ -0,0 +1,9 @@
+module ordermgt/interceptor/service
+
+go 1.12
+
+require (
+	github.com/golang/protobuf v1.4.1
+	google.golang.org/grpc v1.27.0
+	google.golang.org/protobuf v1.25.0
+)
diff --git a/ch05/interceptors/order-service/go/server/main.go b/ch05/interceptors/order-service/go/server/main.go
index d07082c..c0c084d 100644
--- a/ch05/interceptors/order-service/go/server/main.go
+++ b/ch05/interceptors/order-service/go/server/main.go
@@ -2,16 +2,17 @@ package main
 
 import (
 	"context"
-	"github.com/golang/protobuf/ptypes/wrappers"
-	wrapper "github.com/golang/protobuf/ptypes/wrappers"
-	pb "github.com/grpc-up-and-running/samples/ch05/interceptors/order-service/go/order-service-gen"
-	"google.golang.org/grpc"
-	"google.golang.org/grpc/reflection"
 	"io"
 	"log"
 	"net"
 	"strings"
 	"time"
+
+	"github.com/golang/protobuf/ptypes/wrappers"
+	wrapper "github.com/golang/protobuf/ptypes/wrappers"
+	"google.golang.org/grpc"
+	"google.golang.org/grpc/reflection"
+	pb "ordermgt/interceptor/service/ecommerce"
 )
 
 const (
